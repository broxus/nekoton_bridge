// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.78.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';
import 'dart:ffi' as ffi;

class NekotonBridgePlatform extends FlutterRustBridgeBase<NekotonBridgeWire> {
  NekotonBridgePlatform(ffi.DynamicLibrary dylib)
      : super(NekotonBridgeWire(dylib));

// Section: api2wire

  @protected
  wire_ArcAccountsStorageBoxTrait api2wire_ArcAccountsStorageBoxTrait(
      ArcAccountsStorageBoxTrait raw) {
    final ptr = inner.new_ArcAccountsStorageBoxTrait();
    _api_fill_to_wire_ArcAccountsStorageBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcGenericContractBoxTrait api2wire_ArcGenericContractBoxTrait(
      ArcGenericContractBoxTrait raw) {
    final ptr = inner.new_ArcGenericContractBoxTrait();
    _api_fill_to_wire_ArcGenericContractBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcGqlConnectionBoxTrait api2wire_ArcGqlConnectionBoxTrait(
      ArcGqlConnectionBoxTrait raw) {
    final ptr = inner.new_ArcGqlConnectionBoxTrait();
    _api_fill_to_wire_ArcGqlConnectionBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcJrpcConnectionBoxTrait api2wire_ArcJrpcConnectionBoxTrait(
      ArcJrpcConnectionBoxTrait raw) {
    final ptr = inner.new_ArcJrpcConnectionBoxTrait();
    _api_fill_to_wire_ArcJrpcConnectionBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcKeyStoreApiBoxTrait api2wire_ArcKeyStoreApiBoxTrait(
      ArcKeyStoreApiBoxTrait raw) {
    final ptr = inner.new_ArcKeyStoreApiBoxTrait();
    _api_fill_to_wire_ArcKeyStoreApiBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcLedgerConnectionBoxTrait api2wire_ArcLedgerConnectionBoxTrait(
      ArcLedgerConnectionBoxTrait raw) {
    final ptr = inner.new_ArcLedgerConnectionBoxTrait();
    _api_fill_to_wire_ArcLedgerConnectionBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcProtoConnectionBoxTrait api2wire_ArcProtoConnectionBoxTrait(
      ArcProtoConnectionBoxTrait raw) {
    final ptr = inner.new_ArcProtoConnectionBoxTrait();
    _api_fill_to_wire_ArcProtoConnectionBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcStorageBoxTrait api2wire_ArcStorageBoxTrait(ArcStorageBoxTrait raw) {
    final ptr = inner.new_ArcStorageBoxTrait();
    _api_fill_to_wire_ArcStorageBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcTokenWalletBoxTrait api2wire_ArcTokenWalletBoxTrait(
      ArcTokenWalletBoxTrait raw) {
    final ptr = inner.new_ArcTokenWalletBoxTrait();
    _api_fill_to_wire_ArcTokenWalletBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcTonWalletBoxTrait api2wire_ArcTonWalletBoxTrait(
      ArcTonWalletBoxTrait raw) {
    final ptr = inner.new_ArcTonWalletBoxTrait();
    _api_fill_to_wire_ArcTonWalletBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcTransportBoxTrait api2wire_ArcTransportBoxTrait(
      ArcTransportBoxTrait raw) {
    final ptr = inner.new_ArcTransportBoxTrait();
    _api_fill_to_wire_ArcTransportBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  wire_ArcUnsignedMessageBoxTrait api2wire_ArcUnsignedMessageBoxTrait(
      ArcUnsignedMessageBoxTrait raw) {
    final ptr = inner.new_ArcUnsignedMessageBoxTrait();
    _api_fill_to_wire_ArcUnsignedMessageBoxTrait(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_StringList> api2wire_StringList(List<String> raw) {
    final ans = inner.new_StringList_0(raw.length);
    for (var i = 0; i < raw.length; i++) {
      ans.ref.ptr[i] = api2wire_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_AccountsStorageImpl>
      api2wire_box_autoadd_accounts_storage_impl(AccountsStorageImpl raw) {
    final ptr = inner.new_box_autoadd_accounts_storage_impl_0();
    _api_fill_to_wire_accounts_storage_impl(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Bool> api2wire_box_autoadd_bool(bool raw) {
    return inner.new_box_autoadd_bool_0(api2wire_bool(raw));
  }

  @protected
  ffi.Pointer<wire_CallerTestClass> api2wire_box_autoadd_caller_test_class(
      CallerTestClass raw) {
    final ptr = inner.new_box_autoadd_caller_test_class_0();
    _api_fill_to_wire_caller_test_class(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_DartCallStub> api2wire_box_autoadd_dart_call_stub(
      DartCallStub raw) {
    final ptr = inner.new_box_autoadd_dart_call_stub_0();
    _api_fill_to_wire_dart_call_stub(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_DynamicValue> api2wire_box_autoadd_dynamic_value(
      DynamicValue raw) {
    final ptr = inner.new_box_autoadd_dynamic_value_0();
    _api_fill_to_wire_dynamic_value(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_GenericContractDartWrapper>
      api2wire_box_autoadd_generic_contract_dart_wrapper(
          GenericContractDartWrapper raw) {
    final ptr = inner.new_box_autoadd_generic_contract_dart_wrapper_0();
    _api_fill_to_wire_generic_contract_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_GqlConnectionDartWrapper>
      api2wire_box_autoadd_gql_connection_dart_wrapper(
          GqlConnectionDartWrapper raw) {
    final ptr = inner.new_box_autoadd_gql_connection_dart_wrapper_0();
    _api_fill_to_wire_gql_connection_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_GqlTransportImpl> api2wire_box_autoadd_gql_transport_impl(
      GqlTransportImpl raw) {
    final ptr = inner.new_box_autoadd_gql_transport_impl_0();
    _api_fill_to_wire_gql_transport_impl(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> api2wire_box_autoadd_i32(int raw) {
    return inner.new_box_autoadd_i32_0(api2wire_i32(raw));
  }

  @protected
  ffi.Pointer<wire_JrpcConnectionDartWrapper>
      api2wire_box_autoadd_jrpc_connection_dart_wrapper(
          JrpcConnectionDartWrapper raw) {
    final ptr = inner.new_box_autoadd_jrpc_connection_dart_wrapper_0();
    _api_fill_to_wire_jrpc_connection_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_JrpcTransportImpl> api2wire_box_autoadd_jrpc_transport_impl(
      JrpcTransportImpl raw) {
    final ptr = inner.new_box_autoadd_jrpc_transport_impl_0();
    _api_fill_to_wire_jrpc_transport_impl(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_KeySigner> api2wire_box_autoadd_key_signer(KeySigner raw) {
    final ptr = inner.new_box_autoadd_key_signer_0();
    _api_fill_to_wire_key_signer(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_KeystoreDartWrapper>
      api2wire_box_autoadd_keystore_dart_wrapper(KeystoreDartWrapper raw) {
    final ptr = inner.new_box_autoadd_keystore_dart_wrapper_0();
    _api_fill_to_wire_keystore_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_LedgerConnectionDartWrapper>
      api2wire_box_autoadd_ledger_connection_dart_wrapper(
          LedgerConnectionDartWrapper raw) {
    final ptr = inner.new_box_autoadd_ledger_connection_dart_wrapper_0();
    _api_fill_to_wire_ledger_connection_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_MnemonicType> api2wire_box_autoadd_mnemonic_type(
      MnemonicType raw) {
    final ptr = inner.new_box_autoadd_mnemonic_type_0();
    _api_fill_to_wire_mnemonic_type(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_MyClass> api2wire_box_autoadd_my_class(MyClass raw) {
    final ptr = inner.new_box_autoadd_my_class_0();
    _api_fill_to_wire_my_class(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_ProtoConnectionDartWrapper>
      api2wire_box_autoadd_proto_connection_dart_wrapper(
          ProtoConnectionDartWrapper raw) {
    final ptr = inner.new_box_autoadd_proto_connection_dart_wrapper_0();
    _api_fill_to_wire_proto_connection_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_ProtoTransportImpl>
      api2wire_box_autoadd_proto_transport_impl(ProtoTransportImpl raw) {
    final ptr = inner.new_box_autoadd_proto_transport_impl_0();
    _api_fill_to_wire_proto_transport_impl(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_StorageDartWrapper>
      api2wire_box_autoadd_storage_dart_wrapper(StorageDartWrapper raw) {
    final ptr = inner.new_box_autoadd_storage_dart_wrapper_0();
    _api_fill_to_wire_storage_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_TokenWalletDartWrapper>
      api2wire_box_autoadd_token_wallet_dart_wrapper(
          TokenWalletDartWrapper raw) {
    final ptr = inner.new_box_autoadd_token_wallet_dart_wrapper_0();
    _api_fill_to_wire_token_wallet_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_TonWalletDartWrapper>
      api2wire_box_autoadd_ton_wallet_dart_wrapper(TonWalletDartWrapper raw) {
    final ptr = inner.new_box_autoadd_ton_wallet_dart_wrapper_0();
    _api_fill_to_wire_ton_wallet_dart_wrapper(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_TransactionExecutionOptions>
      api2wire_box_autoadd_transaction_execution_options(
          TransactionExecutionOptions raw) {
    final ptr = inner.new_box_autoadd_transaction_execution_options_0();
    _api_fill_to_wire_transaction_execution_options(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Uint64> api2wire_box_autoadd_u64(int raw) {
    return inner.new_box_autoadd_u64_0(api2wire_u64(raw));
  }

  @protected
  ffi.Pointer<wire_UnsignedMessageImpl>
      api2wire_box_autoadd_unsigned_message_impl(UnsignedMessageImpl raw) {
    final ptr = inner.new_box_autoadd_unsigned_message_impl_0();
    _api_fill_to_wire_unsigned_message_impl(raw, ptr.ref);
    return ptr;
  }

  @protected
  int api2wire_i64(int raw) {
    return raw;
  }

  @protected
  ffi.Pointer<wire_int_32_list> api2wire_int_32_list(Int32List raw) {
    final ans = inner.new_int_32_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_list_dynamic_named_value> api2wire_list_dynamic_named_value(
      List<DynamicNamedValue> raw) {
    final ans = inner.new_list_dynamic_named_value_0(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      _api_fill_to_wire_dynamic_named_value(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_list_dynamic_value> api2wire_list_dynamic_value(
      List<DynamicValue> raw) {
    final ans = inner.new_list_dynamic_value_0(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      _api_fill_to_wire_dynamic_value(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_list_key_signer> api2wire_list_key_signer(
      List<KeySigner> raw) {
    final ans = inner.new_list_key_signer_0(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      _api_fill_to_wire_key_signer(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_opt_String(String? raw) {
    return raw == null ? ffi.nullptr : api2wire_String(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> api2wire_opt_box_autoadd_bool(bool? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_bool(raw);
  }

  @protected
  ffi.Pointer<wire_DynamicValue> api2wire_opt_box_autoadd_dynamic_value(
      DynamicValue? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_dynamic_value(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> api2wire_opt_box_autoadd_i32(int? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_i32(raw);
  }

  @protected
  ffi.Pointer<wire_LedgerConnectionDartWrapper>
      api2wire_opt_box_autoadd_ledger_connection_dart_wrapper(
          LedgerConnectionDartWrapper? raw) {
    return raw == null
        ? ffi.nullptr
        : api2wire_box_autoadd_ledger_connection_dart_wrapper(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint64> api2wire_opt_box_autoadd_u64(int? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_u64(raw);
  }

  @protected
  int api2wire_u64(int raw) {
    return raw;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

// Section: finalizer

  late final OpaqueTypeFinalizer _ArcAccountsStorageBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcAccountsStorageBoxTraitPtr);
  OpaqueTypeFinalizer get ArcAccountsStorageBoxTraitFinalizer =>
      _ArcAccountsStorageBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcGenericContractBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcGenericContractBoxTraitPtr);
  OpaqueTypeFinalizer get ArcGenericContractBoxTraitFinalizer =>
      _ArcGenericContractBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcGqlConnectionBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcGqlConnectionBoxTraitPtr);
  OpaqueTypeFinalizer get ArcGqlConnectionBoxTraitFinalizer =>
      _ArcGqlConnectionBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcJrpcConnectionBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcJrpcConnectionBoxTraitPtr);
  OpaqueTypeFinalizer get ArcJrpcConnectionBoxTraitFinalizer =>
      _ArcJrpcConnectionBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcKeyStoreApiBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcKeyStoreApiBoxTraitPtr);
  OpaqueTypeFinalizer get ArcKeyStoreApiBoxTraitFinalizer =>
      _ArcKeyStoreApiBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcLedgerConnectionBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcLedgerConnectionBoxTraitPtr);
  OpaqueTypeFinalizer get ArcLedgerConnectionBoxTraitFinalizer =>
      _ArcLedgerConnectionBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcProtoConnectionBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcProtoConnectionBoxTraitPtr);
  OpaqueTypeFinalizer get ArcProtoConnectionBoxTraitFinalizer =>
      _ArcProtoConnectionBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcStorageBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcStorageBoxTraitPtr);
  OpaqueTypeFinalizer get ArcStorageBoxTraitFinalizer =>
      _ArcStorageBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcTokenWalletBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcTokenWalletBoxTraitPtr);
  OpaqueTypeFinalizer get ArcTokenWalletBoxTraitFinalizer =>
      _ArcTokenWalletBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcTonWalletBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcTonWalletBoxTraitPtr);
  OpaqueTypeFinalizer get ArcTonWalletBoxTraitFinalizer =>
      _ArcTonWalletBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcTransportBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcTransportBoxTraitPtr);
  OpaqueTypeFinalizer get ArcTransportBoxTraitFinalizer =>
      _ArcTransportBoxTraitFinalizer;
  late final OpaqueTypeFinalizer _ArcUnsignedMessageBoxTraitFinalizer =
      OpaqueTypeFinalizer(inner._drop_opaque_ArcUnsignedMessageBoxTraitPtr);
  OpaqueTypeFinalizer get ArcUnsignedMessageBoxTraitFinalizer =>
      _ArcUnsignedMessageBoxTraitFinalizer;
// Section: api_fill_to_wire

  void _api_fill_to_wire_ArcAccountsStorageBoxTrait(
      ArcAccountsStorageBoxTrait apiObj,
      wire_ArcAccountsStorageBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcGenericContractBoxTrait(
      ArcGenericContractBoxTrait apiObj,
      wire_ArcGenericContractBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcGqlConnectionBoxTrait(
      ArcGqlConnectionBoxTrait apiObj, wire_ArcGqlConnectionBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcJrpcConnectionBoxTrait(
      ArcJrpcConnectionBoxTrait apiObj,
      wire_ArcJrpcConnectionBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcKeyStoreApiBoxTrait(
      ArcKeyStoreApiBoxTrait apiObj, wire_ArcKeyStoreApiBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcLedgerConnectionBoxTrait(
      ArcLedgerConnectionBoxTrait apiObj,
      wire_ArcLedgerConnectionBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcProtoConnectionBoxTrait(
      ArcProtoConnectionBoxTrait apiObj,
      wire_ArcProtoConnectionBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcStorageBoxTrait(
      ArcStorageBoxTrait apiObj, wire_ArcStorageBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcTokenWalletBoxTrait(
      ArcTokenWalletBoxTrait apiObj, wire_ArcTokenWalletBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcTonWalletBoxTrait(
      ArcTonWalletBoxTrait apiObj, wire_ArcTonWalletBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcTransportBoxTrait(
      ArcTransportBoxTrait apiObj, wire_ArcTransportBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_ArcUnsignedMessageBoxTrait(
      ArcUnsignedMessageBoxTrait apiObj,
      wire_ArcUnsignedMessageBoxTrait wireObj) {
    wireObj.ptr = apiObj.shareOrMove();
  }

  void _api_fill_to_wire_accounts_storage_impl(
      AccountsStorageImpl apiObj, wire_AccountsStorageImpl wireObj) {
    wireObj.inner_storage =
        api2wire_ArcAccountsStorageBoxTrait(apiObj.innerStorage);
  }

  void _api_fill_to_wire_box_autoadd_accounts_storage_impl(
      AccountsStorageImpl apiObj,
      ffi.Pointer<wire_AccountsStorageImpl> wireObj) {
    _api_fill_to_wire_accounts_storage_impl(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_caller_test_class(
      CallerTestClass apiObj, ffi.Pointer<wire_CallerTestClass> wireObj) {
    _api_fill_to_wire_caller_test_class(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_dart_call_stub(
      DartCallStub apiObj, ffi.Pointer<wire_DartCallStub> wireObj) {
    _api_fill_to_wire_dart_call_stub(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_dynamic_value(
      DynamicValue apiObj, ffi.Pointer<wire_DynamicValue> wireObj) {
    _api_fill_to_wire_dynamic_value(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_generic_contract_dart_wrapper(
      GenericContractDartWrapper apiObj,
      ffi.Pointer<wire_GenericContractDartWrapper> wireObj) {
    _api_fill_to_wire_generic_contract_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_gql_connection_dart_wrapper(
      GqlConnectionDartWrapper apiObj,
      ffi.Pointer<wire_GqlConnectionDartWrapper> wireObj) {
    _api_fill_to_wire_gql_connection_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_gql_transport_impl(
      GqlTransportImpl apiObj, ffi.Pointer<wire_GqlTransportImpl> wireObj) {
    _api_fill_to_wire_gql_transport_impl(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_jrpc_connection_dart_wrapper(
      JrpcConnectionDartWrapper apiObj,
      ffi.Pointer<wire_JrpcConnectionDartWrapper> wireObj) {
    _api_fill_to_wire_jrpc_connection_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_jrpc_transport_impl(
      JrpcTransportImpl apiObj, ffi.Pointer<wire_JrpcTransportImpl> wireObj) {
    _api_fill_to_wire_jrpc_transport_impl(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_key_signer(
      KeySigner apiObj, ffi.Pointer<wire_KeySigner> wireObj) {
    _api_fill_to_wire_key_signer(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_keystore_dart_wrapper(
      KeystoreDartWrapper apiObj,
      ffi.Pointer<wire_KeystoreDartWrapper> wireObj) {
    _api_fill_to_wire_keystore_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_ledger_connection_dart_wrapper(
      LedgerConnectionDartWrapper apiObj,
      ffi.Pointer<wire_LedgerConnectionDartWrapper> wireObj) {
    _api_fill_to_wire_ledger_connection_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_mnemonic_type(
      MnemonicType apiObj, ffi.Pointer<wire_MnemonicType> wireObj) {
    _api_fill_to_wire_mnemonic_type(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_my_class(
      MyClass apiObj, ffi.Pointer<wire_MyClass> wireObj) {
    _api_fill_to_wire_my_class(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_proto_connection_dart_wrapper(
      ProtoConnectionDartWrapper apiObj,
      ffi.Pointer<wire_ProtoConnectionDartWrapper> wireObj) {
    _api_fill_to_wire_proto_connection_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_proto_transport_impl(
      ProtoTransportImpl apiObj, ffi.Pointer<wire_ProtoTransportImpl> wireObj) {
    _api_fill_to_wire_proto_transport_impl(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_storage_dart_wrapper(
      StorageDartWrapper apiObj, ffi.Pointer<wire_StorageDartWrapper> wireObj) {
    _api_fill_to_wire_storage_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_token_wallet_dart_wrapper(
      TokenWalletDartWrapper apiObj,
      ffi.Pointer<wire_TokenWalletDartWrapper> wireObj) {
    _api_fill_to_wire_token_wallet_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_ton_wallet_dart_wrapper(
      TonWalletDartWrapper apiObj,
      ffi.Pointer<wire_TonWalletDartWrapper> wireObj) {
    _api_fill_to_wire_ton_wallet_dart_wrapper(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_transaction_execution_options(
      TransactionExecutionOptions apiObj,
      ffi.Pointer<wire_TransactionExecutionOptions> wireObj) {
    _api_fill_to_wire_transaction_execution_options(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_unsigned_message_impl(
      UnsignedMessageImpl apiObj,
      ffi.Pointer<wire_UnsignedMessageImpl> wireObj) {
    _api_fill_to_wire_unsigned_message_impl(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_caller_test_class(
      CallerTestClass apiObj, wire_CallerTestClass wireObj) {
    wireObj.instance_hash = api2wire_String(apiObj.instanceHash);
    wireObj.value = api2wire_i32(apiObj.value);
  }

  void _api_fill_to_wire_dart_call_stub(
      DartCallStub apiObj, wire_DartCallStub wireObj) {
    wireObj.instance_hash = api2wire_String(apiObj.instanceHash);
    wireObj.fn_name = api2wire_String(apiObj.fnName);
    wireObj.args = api2wire_list_dynamic_value(apiObj.args);
    wireObj.named_args = api2wire_list_dynamic_named_value(apiObj.namedArgs);
  }

  void _api_fill_to_wire_dynamic_named_value(
      DynamicNamedValue apiObj, wire_DynamicNamedValue wireObj) {
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.value = api2wire_opt_box_autoadd_dynamic_value(apiObj.value);
  }

  void _api_fill_to_wire_dynamic_value(
      DynamicValue apiObj, wire_DynamicValue wireObj) {
    if (apiObj is DynamicValue_U16) {
      var pre_field0 = api2wire_u16(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind = inner.inflate_DynamicValue_U16();
      wireObj.kind.ref.U16.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_U32) {
      var pre_field0 = api2wire_u32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind = inner.inflate_DynamicValue_U32();
      wireObj.kind.ref.U32.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_I32) {
      var pre_field0 = api2wire_i32(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind = inner.inflate_DynamicValue_I32();
      wireObj.kind.ref.I32.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_U64) {
      var pre_field0 = api2wire_u64(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind = inner.inflate_DynamicValue_U64();
      wireObj.kind.ref.U64.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_I64) {
      var pre_field0 = api2wire_i64(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind = inner.inflate_DynamicValue_I64();
      wireObj.kind.ref.I64.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_F32) {
      var pre_field0 = api2wire_f32(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind = inner.inflate_DynamicValue_F32();
      wireObj.kind.ref.F32.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_F64) {
      var pre_field0 = api2wire_f64(apiObj.field0);
      wireObj.tag = 6;
      wireObj.kind = inner.inflate_DynamicValue_F64();
      wireObj.kind.ref.F64.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_String) {
      var pre_field0 = api2wire_String(apiObj.field0);
      wireObj.tag = 7;
      wireObj.kind = inner.inflate_DynamicValue_String();
      wireObj.kind.ref.String.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_VecU8) {
      var pre_field0 = api2wire_uint_8_list(apiObj.field0);
      wireObj.tag = 8;
      wireObj.kind = inner.inflate_DynamicValue_VecU8();
      wireObj.kind.ref.VecU8.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_MegaStruct) {
      var pre_field0 = api2wire_String(apiObj.field0);
      wireObj.tag = 9;
      wireObj.kind = inner.inflate_DynamicValue_MegaStruct();
      wireObj.kind.ref.MegaStruct.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_Error) {
      var pre_field0 = api2wire_error_code(apiObj.field0);
      wireObj.tag = 10;
      wireObj.kind = inner.inflate_DynamicValue_Error();
      wireObj.kind.ref.Error.ref.field0 = pre_field0;
      return;
    }
    if (apiObj is DynamicValue_None) {
      wireObj.tag = 11;
      return;
    }
  }

  void _api_fill_to_wire_generic_contract_dart_wrapper(
      GenericContractDartWrapper apiObj,
      wire_GenericContractDartWrapper wireObj) {
    wireObj.inner_contract =
        api2wire_ArcGenericContractBoxTrait(apiObj.innerContract);
  }

  void _api_fill_to_wire_gql_connection_dart_wrapper(
      GqlConnectionDartWrapper apiObj, wire_GqlConnectionDartWrapper wireObj) {
    wireObj.inner_connection =
        api2wire_ArcGqlConnectionBoxTrait(apiObj.innerConnection);
  }

  void _api_fill_to_wire_gql_transport_impl(
      GqlTransportImpl apiObj, wire_GqlTransportImpl wireObj) {
    wireObj.inner_transport =
        api2wire_ArcTransportBoxTrait(apiObj.innerTransport);
  }

  void _api_fill_to_wire_jrpc_connection_dart_wrapper(
      JrpcConnectionDartWrapper apiObj,
      wire_JrpcConnectionDartWrapper wireObj) {
    wireObj.inner_connection =
        api2wire_ArcJrpcConnectionBoxTrait(apiObj.innerConnection);
  }

  void _api_fill_to_wire_jrpc_transport_impl(
      JrpcTransportImpl apiObj, wire_JrpcTransportImpl wireObj) {
    wireObj.inner_transport =
        api2wire_ArcTransportBoxTrait(apiObj.innerTransport);
  }

  void _api_fill_to_wire_key_signer(KeySigner apiObj, wire_KeySigner wireObj) {
    if (apiObj is KeySigner_Encrypted) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KeySigner_Derived) {
      wireObj.tag = 1;
      return;
    }
    if (apiObj is KeySigner_Ledger) {
      wireObj.tag = 2;
      return;
    }
    if (apiObj is KeySigner_Stub) {
      var pre_field0 = api2wire_bool(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind = inner.inflate_KeySigner_Stub();
      wireObj.kind.ref.Stub.ref.field0 = pre_field0;
      return;
    }
  }

  void _api_fill_to_wire_keystore_dart_wrapper(
      KeystoreDartWrapper apiObj, wire_KeystoreDartWrapper wireObj) {
    wireObj.inner_keystore =
        api2wire_ArcKeyStoreApiBoxTrait(apiObj.innerKeystore);
  }

  void _api_fill_to_wire_ledger_connection_dart_wrapper(
      LedgerConnectionDartWrapper apiObj,
      wire_LedgerConnectionDartWrapper wireObj) {
    wireObj.inner_connection =
        api2wire_ArcLedgerConnectionBoxTrait(apiObj.innerConnection);
  }

  void _api_fill_to_wire_mnemonic_type(
      MnemonicType apiObj, wire_MnemonicType wireObj) {
    if (apiObj is MnemonicType_Legacy) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is MnemonicType_Labs) {
      var pre_field0 = api2wire_u16(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind = inner.inflate_MnemonicType_Labs();
      wireObj.kind.ref.Labs.ref.field0 = pre_field0;
      return;
    }
  }

  void _api_fill_to_wire_my_class(MyClass apiObj, wire_MyClass wireObj) {
    wireObj.val = api2wire_i32(apiObj.val);
  }

  void _api_fill_to_wire_opt_box_autoadd_dynamic_value(
      DynamicValue? apiObj, ffi.Pointer<wire_DynamicValue> wireObj) {
    if (apiObj != null)
      _api_fill_to_wire_box_autoadd_dynamic_value(apiObj, wireObj);
  }

  void _api_fill_to_wire_opt_box_autoadd_ledger_connection_dart_wrapper(
      LedgerConnectionDartWrapper? apiObj,
      ffi.Pointer<wire_LedgerConnectionDartWrapper> wireObj) {
    if (apiObj != null)
      _api_fill_to_wire_box_autoadd_ledger_connection_dart_wrapper(
          apiObj, wireObj);
  }

  void _api_fill_to_wire_proto_connection_dart_wrapper(
      ProtoConnectionDartWrapper apiObj,
      wire_ProtoConnectionDartWrapper wireObj) {
    wireObj.inner_connection =
        api2wire_ArcProtoConnectionBoxTrait(apiObj.innerConnection);
  }

  void _api_fill_to_wire_proto_transport_impl(
      ProtoTransportImpl apiObj, wire_ProtoTransportImpl wireObj) {
    wireObj.inner_transport =
        api2wire_ArcTransportBoxTrait(apiObj.innerTransport);
  }

  void _api_fill_to_wire_storage_dart_wrapper(
      StorageDartWrapper apiObj, wire_StorageDartWrapper wireObj) {
    wireObj.inner_storage = api2wire_ArcStorageBoxTrait(apiObj.innerStorage);
  }

  void _api_fill_to_wire_token_wallet_dart_wrapper(
      TokenWalletDartWrapper apiObj, wire_TokenWalletDartWrapper wireObj) {
    wireObj.inner_wallet = api2wire_ArcTokenWalletBoxTrait(apiObj.innerWallet);
  }

  void _api_fill_to_wire_ton_wallet_dart_wrapper(
      TonWalletDartWrapper apiObj, wire_TonWalletDartWrapper wireObj) {
    wireObj.inner_wallet = api2wire_ArcTonWalletBoxTrait(apiObj.innerWallet);
  }

  void _api_fill_to_wire_transaction_execution_options(
      TransactionExecutionOptions apiObj,
      wire_TransactionExecutionOptions wireObj) {
    wireObj.disable_signature_check =
        api2wire_bool(apiObj.disableSignatureCheck);
    wireObj.override_balance =
        api2wire_opt_box_autoadd_u64(apiObj.overrideBalance);
  }

  void _api_fill_to_wire_unsigned_message_impl(
      UnsignedMessageImpl apiObj, wire_UnsignedMessageImpl wireObj) {
    wireObj.inner_message =
        api2wire_ArcUnsignedMessageBoxTrait(apiObj.innerMessage);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class NekotonBridgeWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NekotonBridgeWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NekotonBridgeWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>(
          'get_dart_object');
  late final _get_dart_object =
      _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>(
          'drop_dart_object');
  late final _drop_dart_object =
      _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr =
      _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>(
          'new_dart_opaque');
  late final _new_dart_opaque =
      _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>(
          'init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void wire_verify_signature(
    int port_,
    ffi.Pointer<wire_uint_8_list> public_key,
    ffi.Pointer<wire_uint_8_list> data,
    ffi.Pointer<wire_uint_8_list> signature,
    ffi.Pointer<ffi.Int32> signature_id,
  ) {
    return _wire_verify_signature(
      port_,
      public_key,
      data,
      signature,
      signature_id,
    );
  }

  late final _wire_verify_signaturePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<ffi.Int32>)>>('wire_verify_signature');
  late final _wire_verify_signature = _wire_verify_signaturePtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<ffi.Int32>)>();

  void wire_nt_generate_key(
    int port_,
    ffi.Pointer<wire_MnemonicType> account_type,
  ) {
    return _wire_nt_generate_key(
      port_,
      account_type,
    );
  }

  late final _wire_nt_generate_keyPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_MnemonicType>)>>('wire_nt_generate_key');
  late final _wire_nt_generate_key = _wire_nt_generate_keyPtr
      .asFunction<void Function(int, ffi.Pointer<wire_MnemonicType>)>();

  void wire_nt_get_hints(
    int port_,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_nt_get_hints(
      port_,
      input,
    );
  }

  late final _wire_nt_get_hintsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_nt_get_hints');
  late final _wire_nt_get_hints = _wire_nt_get_hintsPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_nt_derive_from_phrase(
    int port_,
    ffi.Pointer<wire_uint_8_list> phrase,
    ffi.Pointer<wire_MnemonicType> mnemonic_type,
  ) {
    return _wire_nt_derive_from_phrase(
      port_,
      phrase,
      mnemonic_type,
    );
  }

  late final _wire_nt_derive_from_phrasePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_MnemonicType>)>>('wire_nt_derive_from_phrase');
  late final _wire_nt_derive_from_phrase =
      _wire_nt_derive_from_phrasePtr.asFunction<
          void Function(int, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_MnemonicType>)>();

  void wire_check_public_key(
    int port_,
    ffi.Pointer<wire_uint_8_list> public_key,
  ) {
    return _wire_check_public_key(
      port_,
      public_key,
    );
  }

  late final _wire_check_public_keyPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_check_public_key');
  late final _wire_check_public_key = _wire_check_public_keyPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_run_local(
    int port_,
    ffi.Pointer<wire_uint_8_list> account_stuff_boc,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> method,
    ffi.Pointer<wire_uint_8_list> input,
    bool responsible,
  ) {
    return _wire_run_local(
      port_,
      account_stuff_boc,
      contract_abi,
      method,
      input,
      responsible,
    );
  }

  late final _wire_run_localPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Bool)>>('wire_run_local');
  late final _wire_run_local = _wire_run_localPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          bool)>();

  void wire_get_expected_address(
    int port_,
    ffi.Pointer<wire_uint_8_list> tvc,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    int workchain_id,
    ffi.Pointer<wire_uint_8_list> public_key,
    ffi.Pointer<wire_uint_8_list> init_data,
  ) {
    return _wire_get_expected_address(
      port_,
      tvc,
      contract_abi,
      workchain_id,
      public_key,
      init_data,
    );
  }

  late final _wire_get_expected_addressPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Int8,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_get_expected_address');
  late final _wire_get_expected_address =
      _wire_get_expected_addressPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_encode_internal_input(
    int port_,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> method,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_encode_internal_input(
      port_,
      contract_abi,
      method,
      input,
    );
  }

  late final _wire_encode_internal_inputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_encode_internal_input');
  late final _wire_encode_internal_input =
      _wire_encode_internal_inputPtr.asFunction<
          void Function(int, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_create_external_message_without_signature(
    int port_,
    ffi.Pointer<wire_uint_8_list> dst,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> method,
    ffi.Pointer<wire_uint_8_list> state_init,
    ffi.Pointer<wire_uint_8_list> input,
    int timeout,
  ) {
    return _wire_create_external_message_without_signature(
      port_,
      dst,
      contract_abi,
      method,
      state_init,
      input,
      timeout,
    );
  }

  late final _wire_create_external_message_without_signaturePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint32)>>('wire_create_external_message_without_signature');
  late final _wire_create_external_message_without_signature =
      _wire_create_external_message_without_signaturePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int)>();

  void wire_create_external_message(
    int port_,
    ffi.Pointer<wire_uint_8_list> dst,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> method,
    ffi.Pointer<wire_uint_8_list> state_init,
    ffi.Pointer<wire_uint_8_list> input,
    ffi.Pointer<wire_uint_8_list> public_key,
    int timeout,
  ) {
    return _wire_create_external_message(
      port_,
      dst,
      contract_abi,
      method,
      state_init,
      input,
      public_key,
      timeout,
    );
  }

  late final _wire_create_external_messagePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint32)>>('wire_create_external_message');
  late final _wire_create_external_message =
      _wire_create_external_messagePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int)>();

  void wire_parse_known_payload(
    int port_,
    ffi.Pointer<wire_uint_8_list> payload,
  ) {
    return _wire_parse_known_payload(
      port_,
      payload,
    );
  }

  late final _wire_parse_known_payloadPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_parse_known_payload');
  late final _wire_parse_known_payload = _wire_parse_known_payloadPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_decode_input(
    int port_,
    ffi.Pointer<wire_uint_8_list> message_body,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> method,
    bool internal,
  ) {
    return _wire_decode_input(
      port_,
      message_body,
      contract_abi,
      method,
      internal,
    );
  }

  late final _wire_decode_inputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Bool)>>('wire_decode_input');
  late final _wire_decode_input = _wire_decode_inputPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          bool)>();

  void wire_decode_event(
    int port_,
    ffi.Pointer<wire_uint_8_list> message_body,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> event,
  ) {
    return _wire_decode_event(
      port_,
      message_body,
      contract_abi,
      event,
    );
  }

  late final _wire_decode_eventPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_decode_event');
  late final _wire_decode_event = _wire_decode_eventPtr.asFunction<
      void Function(int, ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_decode_output(
    int port_,
    ffi.Pointer<wire_uint_8_list> message_body,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> method,
  ) {
    return _wire_decode_output(
      port_,
      message_body,
      contract_abi,
      method,
    );
  }

  late final _wire_decode_outputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_decode_output');
  late final _wire_decode_output = _wire_decode_outputPtr.asFunction<
      void Function(int, ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_decode_transaction(
    int port_,
    ffi.Pointer<wire_uint_8_list> transaction,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> method,
  ) {
    return _wire_decode_transaction(
      port_,
      transaction,
      contract_abi,
      method,
    );
  }

  late final _wire_decode_transactionPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_decode_transaction');
  late final _wire_decode_transaction = _wire_decode_transactionPtr.asFunction<
      void Function(int, ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_decode_transaction_events(
    int port_,
    ffi.Pointer<wire_uint_8_list> transaction,
    ffi.Pointer<wire_uint_8_list> contract_abi,
  ) {
    return _wire_decode_transaction_events(
      port_,
      transaction,
      contract_abi,
    );
  }

  late final _wire_decode_transaction_eventsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_decode_transaction_events');
  late final _wire_decode_transaction_events =
      _wire_decode_transaction_eventsPtr.asFunction<
          void Function(int, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_boc_hash(
    int port_,
    ffi.Pointer<wire_uint_8_list> boc,
  ) {
    return _wire_get_boc_hash(
      port_,
      boc,
    );
  }

  late final _wire_get_boc_hashPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_get_boc_hash');
  late final _wire_get_boc_hash = _wire_get_boc_hashPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_pack_into_cell(
    int port_,
    ffi.Pointer<wire_uint_8_list> params,
    ffi.Pointer<wire_uint_8_list> tokens,
    ffi.Pointer<wire_uint_8_list> version,
  ) {
    return _wire_pack_into_cell(
      port_,
      params,
      tokens,
      version,
    );
  }

  late final _wire_pack_into_cellPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_pack_into_cell');
  late final _wire_pack_into_cell = _wire_pack_into_cellPtr.asFunction<
      void Function(int, ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_unpack_from_cell(
    int port_,
    ffi.Pointer<wire_uint_8_list> params,
    ffi.Pointer<wire_uint_8_list> boc,
    bool allow_partial,
    ffi.Pointer<wire_uint_8_list> version,
  ) {
    return _wire_unpack_from_cell(
      port_,
      params,
      boc,
      allow_partial,
      version,
    );
  }

  late final _wire_unpack_from_cellPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Bool,
              ffi.Pointer<wire_uint_8_list>)>>('wire_unpack_from_cell');
  late final _wire_unpack_from_cell = _wire_unpack_from_cellPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          bool,
          ffi.Pointer<wire_uint_8_list>)>();

  void wire_pack_std_smc_addr(
    int port_,
    ffi.Pointer<wire_uint_8_list> addr,
    bool base64_url,
    bool bounceable,
  ) {
    return _wire_pack_std_smc_addr(
      port_,
      addr,
      base64_url,
      bounceable,
    );
  }

  late final _wire_pack_std_smc_addrPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>, ffi.Bool,
              ffi.Bool)>>('wire_pack_std_smc_addr');
  late final _wire_pack_std_smc_addr = _wire_pack_std_smc_addrPtr.asFunction<
      void Function(int, ffi.Pointer<wire_uint_8_list>, bool, bool)>();

  void wire_unpack_std_smc_addr(
    int port_,
    ffi.Pointer<wire_uint_8_list> packed,
    bool base64_url,
  ) {
    return _wire_unpack_std_smc_addr(
      port_,
      packed,
      base64_url,
    );
  }

  late final _wire_unpack_std_smc_addrPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Bool)>>('wire_unpack_std_smc_addr');
  late final _wire_unpack_std_smc_addr = _wire_unpack_std_smc_addrPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>, bool)>();

  void wire_validate_address(
    int port_,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_validate_address(
      port_,
      address,
    );
  }

  late final _wire_validate_addressPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_validate_address');
  late final _wire_validate_address = _wire_validate_addressPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_repack_address(
    int port_,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_repack_address(
      port_,
      address,
    );
  }

  late final _wire_repack_addressPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_repack_address');
  late final _wire_repack_address = _wire_repack_addressPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_extract_public_key(
    int port_,
    ffi.Pointer<wire_uint_8_list> boc,
  ) {
    return _wire_extract_public_key(
      port_,
      boc,
    );
  }

  late final _wire_extract_public_keyPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_extract_public_key');
  late final _wire_extract_public_key = _wire_extract_public_keyPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_code_to_tvc(
    int port_,
    ffi.Pointer<wire_uint_8_list> code,
  ) {
    return _wire_code_to_tvc(
      port_,
      code,
    );
  }

  late final _wire_code_to_tvcPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_code_to_tvc');
  late final _wire_code_to_tvc = _wire_code_to_tvcPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_merge_tvc(
    int port_,
    ffi.Pointer<wire_uint_8_list> code,
    ffi.Pointer<wire_uint_8_list> data,
  ) {
    return _wire_merge_tvc(
      port_,
      code,
      data,
    );
  }

  late final _wire_merge_tvcPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_merge_tvc');
  late final _wire_merge_tvc = _wire_merge_tvcPtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_split_tvc(
    int port_,
    ffi.Pointer<wire_uint_8_list> tvc,
  ) {
    return _wire_split_tvc(
      port_,
      tvc,
    );
  }

  late final _wire_split_tvcPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_split_tvc');
  late final _wire_split_tvc = _wire_split_tvcPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_set_code_salt(
    int port_,
    ffi.Pointer<wire_uint_8_list> code,
    ffi.Pointer<wire_uint_8_list> salt,
  ) {
    return _wire_set_code_salt(
      port_,
      code,
      salt,
    );
  }

  late final _wire_set_code_saltPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_set_code_salt');
  late final _wire_set_code_salt = _wire_set_code_saltPtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_code_salt(
    int port_,
    ffi.Pointer<wire_uint_8_list> code,
  ) {
    return _wire_get_code_salt(
      port_,
      code,
    );
  }

  late final _wire_get_code_saltPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_get_code_salt');
  late final _wire_get_code_salt = _wire_get_code_saltPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_execute_local(
    int port_,
    ffi.Pointer<wire_uint_8_list> config,
    ffi.Pointer<wire_uint_8_list> account,
    ffi.Pointer<wire_uint_8_list> message,
    int utime,
    bool disable_signature_check,
    ffi.Pointer<wire_uint_8_list> overwrite_balance,
    ffi.Pointer<ffi.Int32> global_id,
  ) {
    return _wire_execute_local(
      port_,
      config,
      account,
      message,
      utime,
      disable_signature_check,
      overwrite_balance,
      global_id,
    );
  }

  late final _wire_execute_localPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint32,
              ffi.Bool,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<ffi.Int32>)>>('wire_execute_local');
  late final _wire_execute_local = _wire_execute_localPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<wire_uint_8_list>,
          int,
          bool,
          ffi.Pointer<wire_uint_8_list>,
          ffi.Pointer<ffi.Int32>)>();

  void wire_unpack_init_data(
    int port_,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> data,
  ) {
    return _wire_unpack_init_data(
      port_,
      contract_abi,
      data,
    );
  }

  late final _wire_unpack_init_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_unpack_init_data');
  late final _wire_unpack_init_data = _wire_unpack_init_dataPtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_unpack_contract_fields(
    int port_,
    ffi.Pointer<wire_uint_8_list> contract_abi,
    ffi.Pointer<wire_uint_8_list> boc,
    bool allow_partial,
  ) {
    return _wire_unpack_contract_fields(
      port_,
      contract_abi,
      boc,
      allow_partial,
    );
  }

  late final _wire_unpack_contract_fieldsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Bool)>>('wire_unpack_contract_fields');
  late final _wire_unpack_contract_fields =
      _wire_unpack_contract_fieldsPtr.asFunction<
          void Function(int, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>, bool)>();

  void wire_create_raw_external_message(
    int port_,
    ffi.Pointer<wire_uint_8_list> dst,
    ffi.Pointer<wire_uint_8_list> state_init,
    ffi.Pointer<wire_uint_8_list> body,
    int timeout,
  ) {
    return _wire_create_raw_external_message(
      port_,
      dst,
      state_init,
      body,
      timeout,
    );
  }

  late final _wire_create_raw_external_messagePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint32)>>('wire_create_raw_external_message');
  late final _wire_create_raw_external_message =
      _wire_create_raw_external_messagePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int)>();

  void wire_encode_internal_message(
    int port_,
    ffi.Pointer<wire_uint_8_list> src,
    ffi.Pointer<wire_uint_8_list> dst,
    bool bounce,
    ffi.Pointer<wire_uint_8_list> state_init,
    ffi.Pointer<wire_uint_8_list> body,
    ffi.Pointer<wire_uint_8_list> amount,
    ffi.Pointer<ffi.Bool> bounced,
  ) {
    return _wire_encode_internal_message(
      port_,
      src,
      dst,
      bounce,
      state_init,
      body,
      amount,
      bounced,
    );
  }

  late final _wire_encode_internal_messagePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Bool,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<ffi.Bool>)>>('wire_encode_internal_message');
  late final _wire_encode_internal_message =
      _wire_encode_internal_messagePtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              bool,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<ffi.Bool>)>();

  void wire_make_full_account_boc(
    int port_,
    ffi.Pointer<wire_uint_8_list> account_stuff_boc,
  ) {
    return _wire_make_full_account_boc(
      port_,
      account_stuff_boc,
    );
  }

  late final _wire_make_full_account_bocPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_make_full_account_boc');
  late final _wire_make_full_account_boc = _wire_make_full_account_bocPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_parse_full_account_boc(
    int port_,
    ffi.Pointer<wire_uint_8_list> account,
  ) {
    return _wire_parse_full_account_boc(
      port_,
      account,
    );
  }

  late final _wire_parse_full_account_bocPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_parse_full_account_boc');
  late final _wire_parse_full_account_boc = _wire_parse_full_account_bocPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_compute_storage_fee(
    int port_,
    ffi.Pointer<wire_uint_8_list> config,
    ffi.Pointer<wire_uint_8_list> account,
    int utime,
    bool is_masterchain,
  ) {
    return _wire_compute_storage_fee(
      port_,
      config,
      account,
      utime,
      is_masterchain,
    );
  }

  late final _wire_compute_storage_feePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint32,
              ffi.Bool)>>('wire_compute_storage_fee');
  late final _wire_compute_storage_fee =
      _wire_compute_storage_feePtr.asFunction<
          void Function(int, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>, int, bool)>();

  void wire_test_logger_info(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
  ) {
    return _wire_test_logger_info(
      port_,
      string,
    );
  }

  late final _wire_test_logger_infoPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_test_logger_info');
  late final _wire_test_logger_info = _wire_test_logger_infoPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_test_logger_debug(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
  ) {
    return _wire_test_logger_debug(
      port_,
      string,
    );
  }

  late final _wire_test_logger_debugPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_test_logger_debug');
  late final _wire_test_logger_debug = _wire_test_logger_debugPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_test_logger_warn(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
  ) {
    return _wire_test_logger_warn(
      port_,
      string,
    );
  }

  late final _wire_test_logger_warnPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_test_logger_warn');
  late final _wire_test_logger_warn = _wire_test_logger_warnPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_test_logger_error(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
  ) {
    return _wire_test_logger_error(
      port_,
      string,
    );
  }

  late final _wire_test_logger_errorPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_test_logger_error');
  late final _wire_test_logger_error = _wire_test_logger_errorPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_test_logger_panic(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
  ) {
    return _wire_test_logger_panic(
      port_,
      string,
    );
  }

  late final _wire_test_logger_panicPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_uint_8_list>)>>('wire_test_logger_panic');
  late final _wire_test_logger_panic = _wire_test_logger_panicPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_test_caller_call_test0_async(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
    bool need_result,
  ) {
    return _wire_test_caller_call_test0_async(
      port_,
      string,
      need_result,
    );
  }

  late final _wire_test_caller_call_test0_asyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Bool)>>('wire_test_caller_call_test0_async');
  late final _wire_test_caller_call_test0_async =
      _wire_test_caller_call_test0_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_uint_8_list>, bool)>();

  WireSyncReturn wire_test_caller_call_test0_sync(
    ffi.Pointer<wire_uint_8_list> string,
    bool need_result,
  ) {
    return _wire_test_caller_call_test0_sync(
      string,
      need_result,
    );
  }

  late final _wire_test_caller_call_test0_syncPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>,
              ffi.Bool)>>('wire_test_caller_call_test0_sync');
  late final _wire_test_caller_call_test0_sync =
      _wire_test_caller_call_test0_syncPtr.asFunction<
          WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>, bool)>();

  void wire_test_caller_call_test1_async(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
    bool need_result,
  ) {
    return _wire_test_caller_call_test1_async(
      port_,
      string,
      need_result,
    );
  }

  late final _wire_test_caller_call_test1_asyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Bool)>>('wire_test_caller_call_test1_async');
  late final _wire_test_caller_call_test1_async =
      _wire_test_caller_call_test1_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_uint_8_list>, bool)>();

  void wire_init_logger(
    int port_,
    int level,
    bool mobile_logger,
  ) {
    return _wire_init_logger(
      port_,
      level,
      mobile_logger,
    );
  }

  late final _wire_init_loggerPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Bool)>>(
      'wire_init_logger');
  late final _wire_init_logger =
      _wire_init_loggerPtr.asFunction<void Function(int, int, bool)>();

  void wire_create_log_stream(
    int port_,
  ) {
    return _wire_create_log_stream(
      port_,
    );
  }

  late final _wire_create_log_streamPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_create_log_stream');
  late final _wire_create_log_stream =
      _wire_create_log_streamPtr.asFunction<void Function(int)>();

  void wire_init_runtime(
    int port_,
  ) {
    return _wire_init_runtime(
      port_,
    );
  }

  late final _wire_init_runtimePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_init_runtime');
  late final _wire_init_runtime =
      _wire_init_runtimePtr.asFunction<void Function(int)>();

  void wire_init_caller(
    int port_,
  ) {
    return _wire_init_caller(
      port_,
    );
  }

  late final _wire_init_callerPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_init_caller');
  late final _wire_init_caller =
      _wire_init_callerPtr.asFunction<void Function(int)>();

  WireSyncReturn wire_call_send_result(
    ffi.Pointer<wire_uint_8_list> id,
    ffi.Pointer<wire_DynamicValue> value,
  ) {
    return _wire_call_send_result(
      id,
      value,
    );
  }

  late final _wire_call_send_resultPtr = _lookup<
      ffi.NativeFunction<
          WireSyncReturn Function(ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_DynamicValue>)>>('wire_call_send_result');
  late final _wire_call_send_result = _wire_call_send_resultPtr.asFunction<
      WireSyncReturn Function(
          ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_DynamicValue>)>();

  void wire_set_clock_offset(
    int port_,
    int offset_ms,
  ) {
    return _wire_set_clock_offset(
      port_,
      offset_ms,
    );
  }

  late final _wire_set_clock_offsetPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'wire_set_clock_offset');
  late final _wire_set_clock_offset =
      _wire_set_clock_offsetPtr.asFunction<void Function(int, int)>();

  void wire_simple_log(
    int port_,
    ffi.Pointer<wire_uint_8_list> string,
  ) {
    return _wire_simple_log(
      port_,
      string,
    );
  }

  late final _wire_simple_logPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>('wire_simple_log');
  late final _wire_simple_log = _wire_simple_logPtr
      .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_simple_panic(
    int port_,
  ) {
    return _wire_simple_panic(
      port_,
    );
  }

  late final _wire_simple_panicPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_simple_panic');
  late final _wire_simple_panic =
      _wire_simple_panicPtr.asFunction<void Function(int)>();

  WireSyncReturn wire_simple_adder_sync(
    int a,
    int b,
  ) {
    return _wire_simple_adder_sync(
      a,
      b,
    );
  }

  late final _wire_simple_adder_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncReturn Function(ffi.Int32, ffi.Int32)>>(
      'wire_simple_adder_sync');
  late final _wire_simple_adder_sync = _wire_simple_adder_syncPtr
      .asFunction<WireSyncReturn Function(int, int)>();

  void wire_simple_adder(
    int port_,
    int a,
    int b,
  ) {
    return _wire_simple_adder(
      port_,
      a,
      b,
    );
  }

  late final _wire_simple_adderPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'wire_simple_adder');
  late final _wire_simple_adder =
      _wire_simple_adderPtr.asFunction<void Function(int, int, int)>();

  void wire_stub_dv(
    int port_,
  ) {
    return _wire_stub_dv(
      port_,
    );
  }

  late final _wire_stub_dvPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_stub_dv');
  late final _wire_stub_dv = _wire_stub_dvPtr.asFunction<void Function(int)>();

  void wire_stub_dcs(
    int port_,
  ) {
    return _wire_stub_dcs(
      port_,
    );
  }

  late final _wire_stub_dcsPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_stub_dcs');
  late final _wire_stub_dcs =
      _wire_stub_dcsPtr.asFunction<void Function(int)>();

  void wire_simple_call_dart(
    int port_,
  ) {
    return _wire_simple_call_dart(
      port_,
    );
  }

  late final _wire_simple_call_dartPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_simple_call_dart');
  late final _wire_simple_call_dart =
      _wire_simple_call_dartPtr.asFunction<void Function(int)>();

  void wire_stub_call_dart(
    int port_,
    ffi.Pointer<wire_DartCallStub> stub,
  ) {
    return _wire_stub_call_dart(
      port_,
      stub,
    );
  }

  late final _wire_stub_call_dartPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_DartCallStub>)>>('wire_stub_call_dart');
  late final _wire_stub_call_dart = _wire_stub_call_dartPtr
      .asFunction<void Function(int, ffi.Pointer<wire_DartCallStub>)>();

  void wire_simple_call_func0(
    int port_,
    bool need_result,
  ) {
    return _wire_simple_call_func0(
      port_,
      need_result,
    );
  }

  late final _wire_simple_call_func0Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
          'wire_simple_call_func0');
  late final _wire_simple_call_func0 =
      _wire_simple_call_func0Ptr.asFunction<void Function(int, bool)>();

  void wire_simple_call_func1(
    int port_,
    bool need_result,
  ) {
    return _wire_simple_call_func1(
      port_,
      need_result,
    );
  }

  late final _wire_simple_call_func1Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
          'wire_simple_call_func1');
  late final _wire_simple_call_func1 =
      _wire_simple_call_func1Ptr.asFunction<void Function(int, bool)>();

  void wire_simple_call_func2(
    int port_,
  ) {
    return _wire_simple_call_func2(
      port_,
    );
  }

  late final _wire_simple_call_func2Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_simple_call_func2');
  late final _wire_simple_call_func2 =
      _wire_simple_call_func2Ptr.asFunction<void Function(int)>();

  void wire_simple_call_func3(
    int port_,
  ) {
    return _wire_simple_call_func3(
      port_,
    );
  }

  late final _wire_simple_call_func3Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'wire_simple_call_func3');
  late final _wire_simple_call_func3 =
      _wire_simple_call_func3Ptr.asFunction<void Function(int)>();

  void wire_refresh_timeout__method__UnsignedMessageImpl(
    int port_,
    ffi.Pointer<wire_UnsignedMessageImpl> that,
  ) {
    return _wire_refresh_timeout__method__UnsignedMessageImpl(
      port_,
      that,
    );
  }

  late final _wire_refresh_timeout__method__UnsignedMessageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_UnsignedMessageImpl>)>>(
      'wire_refresh_timeout__method__UnsignedMessageImpl');
  late final _wire_refresh_timeout__method__UnsignedMessageImpl =
      _wire_refresh_timeout__method__UnsignedMessageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_UnsignedMessageImpl>)>();

  void wire_expire_at__method__UnsignedMessageImpl(
    int port_,
    ffi.Pointer<wire_UnsignedMessageImpl> that,
  ) {
    return _wire_expire_at__method__UnsignedMessageImpl(
      port_,
      that,
    );
  }

  late final _wire_expire_at__method__UnsignedMessageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_UnsignedMessageImpl>)>>(
      'wire_expire_at__method__UnsignedMessageImpl');
  late final _wire_expire_at__method__UnsignedMessageImpl =
      _wire_expire_at__method__UnsignedMessageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_UnsignedMessageImpl>)>();

  void wire_hash__method__UnsignedMessageImpl(
    int port_,
    ffi.Pointer<wire_UnsignedMessageImpl> that,
  ) {
    return _wire_hash__method__UnsignedMessageImpl(
      port_,
      that,
    );
  }

  late final _wire_hash__method__UnsignedMessageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_UnsignedMessageImpl>)>>(
      'wire_hash__method__UnsignedMessageImpl');
  late final _wire_hash__method__UnsignedMessageImpl =
      _wire_hash__method__UnsignedMessageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_UnsignedMessageImpl>)>();

  void wire_sign__method__UnsignedMessageImpl(
    int port_,
    ffi.Pointer<wire_UnsignedMessageImpl> that,
    ffi.Pointer<wire_uint_8_list> signature,
  ) {
    return _wire_sign__method__UnsignedMessageImpl(
      port_,
      that,
      signature,
    );
  }

  late final _wire_sign__method__UnsignedMessageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_UnsignedMessageImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_sign__method__UnsignedMessageImpl');
  late final _wire_sign__method__UnsignedMessageImpl =
      _wire_sign__method__UnsignedMessageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_UnsignedMessageImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_sign_fake__method__UnsignedMessageImpl(
    int port_,
    ffi.Pointer<wire_UnsignedMessageImpl> that,
  ) {
    return _wire_sign_fake__method__UnsignedMessageImpl(
      port_,
      that,
    );
  }

  late final _wire_sign_fake__method__UnsignedMessageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_UnsignedMessageImpl>)>>(
      'wire_sign_fake__method__UnsignedMessageImpl');
  late final _wire_sign_fake__method__UnsignedMessageImpl =
      _wire_sign_fake__method__UnsignedMessageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_UnsignedMessageImpl>)>();

  void wire_new__static_method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlConnectionDartWrapper> gql_connection,
  ) {
    return _wire_new__static_method__GqlTransportImpl(
      port_,
      gql_connection,
    );
  }

  late final _wire_new__static_method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_GqlConnectionDartWrapper>)>>(
      'wire_new__static_method__GqlTransportImpl');
  late final _wire_new__static_method__GqlTransportImpl =
      _wire_new__static_method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlConnectionDartWrapper>)>();

  void wire_get_contract_state__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_contract_state__method__GqlTransportImpl(
      port_,
      that,
      address,
    );
  }

  late final _wire_get_contract_state__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_contract_state__method__GqlTransportImpl');
  late final _wire_get_contract_state__method__GqlTransportImpl =
      _wire_get_contract_state__method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_full_contract_state__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_full_contract_state__method__GqlTransportImpl(
      port_,
      that,
      address,
    );
  }

  late final _wire_get_full_contract_state__method__GqlTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_GqlTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_full_contract_state__method__GqlTransportImpl');
  late final _wire_get_full_contract_state__method__GqlTransportImpl =
      _wire_get_full_contract_state__method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_accounts_by_code_hash__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> code_hash,
    int limit,
    ffi.Pointer<wire_uint_8_list> continuation,
  ) {
    return _wire_get_accounts_by_code_hash__method__GqlTransportImpl(
      port_,
      that,
      code_hash,
      limit,
      continuation,
    );
  }

  late final _wire_get_accounts_by_code_hash__method__GqlTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_GqlTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Uint8,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_accounts_by_code_hash__method__GqlTransportImpl');
  late final _wire_get_accounts_by_code_hash__method__GqlTransportImpl =
      _wire_get_accounts_by_code_hash__method__GqlTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              int,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_transactions__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
    ffi.Pointer<wire_uint_8_list> from_lt,
    int count,
  ) {
    return _wire_get_transactions__method__GqlTransportImpl(
      port_,
      that,
      address,
      from_lt,
      count,
    );
  }

  late final _wire_get_transactions__method__GqlTransportImplPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint8)>>('wire_get_transactions__method__GqlTransportImpl');
  late final _wire_get_transactions__method__GqlTransportImpl =
      _wire_get_transactions__method__GqlTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int)>();

  void wire_get_transaction__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> hash,
  ) {
    return _wire_get_transaction__method__GqlTransportImpl(
      port_,
      that,
      hash,
    );
  }

  late final _wire_get_transaction__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_transaction__method__GqlTransportImpl');
  late final _wire_get_transaction__method__GqlTransportImpl =
      _wire_get_transaction__method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_dst_transaction__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> message_hash,
  ) {
    return _wire_get_dst_transaction__method__GqlTransportImpl(
      port_,
      that,
      message_hash,
    );
  }

  late final _wire_get_dst_transaction__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_dst_transaction__method__GqlTransportImpl');
  late final _wire_get_dst_transaction__method__GqlTransportImpl =
      _wire_get_dst_transaction__method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_signature_id__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
  ) {
    return _wire_get_signature_id__method__GqlTransportImpl(
      port_,
      that,
    );
  }

  late final _wire_get_signature_id__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>)>>(
      'wire_get_signature_id__method__GqlTransportImpl');
  late final _wire_get_signature_id__method__GqlTransportImpl =
      _wire_get_signature_id__method__GqlTransportImplPtr
          .asFunction<void Function(int, ffi.Pointer<wire_GqlTransportImpl>)>();

  void wire_get_blockchain_config__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    bool force,
  ) {
    return _wire_get_blockchain_config__method__GqlTransportImpl(
      port_,
      that,
      force,
    );
  }

  late final _wire_get_blockchain_config__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>, ffi.Bool)>>(
      'wire_get_blockchain_config__method__GqlTransportImpl');
  late final _wire_get_blockchain_config__method__GqlTransportImpl =
      _wire_get_blockchain_config__method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlTransportImpl>, bool)>();

  void wire_get_network_id__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
  ) {
    return _wire_get_network_id__method__GqlTransportImpl(
      port_,
      that,
    );
  }

  late final _wire_get_network_id__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>)>>(
      'wire_get_network_id__method__GqlTransportImpl');
  late final _wire_get_network_id__method__GqlTransportImpl =
      _wire_get_network_id__method__GqlTransportImplPtr
          .asFunction<void Function(int, ffi.Pointer<wire_GqlTransportImpl>)>();

  void wire_get_latest_block__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_latest_block__method__GqlTransportImpl(
      port_,
      that,
      address,
    );
  }

  late final _wire_get_latest_block__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_latest_block__method__GqlTransportImpl');
  late final _wire_get_latest_block__method__GqlTransportImpl =
      _wire_get_latest_block__method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_block__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> id,
  ) {
    return _wire_get_block__method__GqlTransportImpl(
      port_,
      that,
      id,
    );
  }

  late final _wire_get_block__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_GqlTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_block__method__GqlTransportImpl');
  late final _wire_get_block__method__GqlTransportImpl =
      _wire_get_block__method__GqlTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_wait_for_next_block__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> current_block_id,
    ffi.Pointer<wire_uint_8_list> address,
    int timeout,
  ) {
    return _wire_wait_for_next_block__method__GqlTransportImpl(
      port_,
      that,
      current_block_id,
      address,
      timeout,
    );
  }

  late final _wire_wait_for_next_block__method__GqlTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_GqlTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Uint64)>>(
      'wire_wait_for_next_block__method__GqlTransportImpl');
  late final _wire_wait_for_next_block__method__GqlTransportImpl =
      _wire_wait_for_next_block__method__GqlTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int)>();

  void wire_simulate_transaction_tree__method__GqlTransportImpl(
    int port_,
    ffi.Pointer<wire_GqlTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
    ffi.Pointer<wire_int_32_list> ignored_compute_phase_codes,
    ffi.Pointer<wire_int_32_list> ignored_action_phase_codes,
  ) {
    return _wire_simulate_transaction_tree__method__GqlTransportImpl(
      port_,
      that,
      signed_message,
      ignored_compute_phase_codes,
      ignored_action_phase_codes,
    );
  }

  late final _wire_simulate_transaction_tree__method__GqlTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_GqlTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_int_32_list>,
                      ffi.Pointer<wire_int_32_list>)>>(
          'wire_simulate_transaction_tree__method__GqlTransportImpl');
  late final _wire_simulate_transaction_tree__method__GqlTransportImpl =
      _wire_simulate_transaction_tree__method__GqlTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_GqlTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_int_32_list>,
              ffi.Pointer<wire_int_32_list>)>();

  void wire_new__static_method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoConnectionDartWrapper> proto_connection,
  ) {
    return _wire_new__static_method__ProtoTransportImpl(
      port_,
      proto_connection,
    );
  }

  late final _wire_new__static_method__ProtoTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_ProtoConnectionDartWrapper>)>>(
      'wire_new__static_method__ProtoTransportImpl');
  late final _wire_new__static_method__ProtoTransportImpl =
      _wire_new__static_method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoConnectionDartWrapper>)>();

  void wire_get_contract_state__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_contract_state__method__ProtoTransportImpl(
      port_,
      that,
      address,
    );
  }

  late final _wire_get_contract_state__method__ProtoTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_ProtoTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_contract_state__method__ProtoTransportImpl');
  late final _wire_get_contract_state__method__ProtoTransportImpl =
      _wire_get_contract_state__method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_full_contract_state__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_full_contract_state__method__ProtoTransportImpl(
      port_,
      that,
      address,
    );
  }

  late final _wire_get_full_contract_state__method__ProtoTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_ProtoTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_full_contract_state__method__ProtoTransportImpl');
  late final _wire_get_full_contract_state__method__ProtoTransportImpl =
      _wire_get_full_contract_state__method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_accounts_by_code_hash__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> code_hash,
    int limit,
    ffi.Pointer<wire_uint_8_list> continuation,
  ) {
    return _wire_get_accounts_by_code_hash__method__ProtoTransportImpl(
      port_,
      that,
      code_hash,
      limit,
      continuation,
    );
  }

  late final _wire_get_accounts_by_code_hash__method__ProtoTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_ProtoTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Uint8,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_accounts_by_code_hash__method__ProtoTransportImpl');
  late final _wire_get_accounts_by_code_hash__method__ProtoTransportImpl =
      _wire_get_accounts_by_code_hash__method__ProtoTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              int,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_transactions__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
    ffi.Pointer<wire_uint_8_list> from_lt,
    int count,
  ) {
    return _wire_get_transactions__method__ProtoTransportImpl(
      port_,
      that,
      address,
      from_lt,
      count,
    );
  }

  late final _wire_get_transactions__method__ProtoTransportImplPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint8)>>('wire_get_transactions__method__ProtoTransportImpl');
  late final _wire_get_transactions__method__ProtoTransportImpl =
      _wire_get_transactions__method__ProtoTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int)>();

  void wire_get_transaction__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> hash,
  ) {
    return _wire_get_transaction__method__ProtoTransportImpl(
      port_,
      that,
      hash,
    );
  }

  late final _wire_get_transaction__method__ProtoTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_ProtoTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_transaction__method__ProtoTransportImpl');
  late final _wire_get_transaction__method__ProtoTransportImpl =
      _wire_get_transaction__method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_dst_transaction__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> message_hash,
  ) {
    return _wire_get_dst_transaction__method__ProtoTransportImpl(
      port_,
      that,
      message_hash,
    );
  }

  late final _wire_get_dst_transaction__method__ProtoTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_ProtoTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_dst_transaction__method__ProtoTransportImpl');
  late final _wire_get_dst_transaction__method__ProtoTransportImpl =
      _wire_get_dst_transaction__method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_signature_id__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
  ) {
    return _wire_get_signature_id__method__ProtoTransportImpl(
      port_,
      that,
    );
  }

  late final _wire_get_signature_id__method__ProtoTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_ProtoTransportImpl>)>>(
      'wire_get_signature_id__method__ProtoTransportImpl');
  late final _wire_get_signature_id__method__ProtoTransportImpl =
      _wire_get_signature_id__method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoTransportImpl>)>();

  void wire_get_blockchain_config__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    bool force,
  ) {
    return _wire_get_blockchain_config__method__ProtoTransportImpl(
      port_,
      that,
      force,
    );
  }

  late final _wire_get_blockchain_config__method__ProtoTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_ProtoTransportImpl>, ffi.Bool)>>(
          'wire_get_blockchain_config__method__ProtoTransportImpl');
  late final _wire_get_blockchain_config__method__ProtoTransportImpl =
      _wire_get_blockchain_config__method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoTransportImpl>, bool)>();

  void wire_get_network_id__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
  ) {
    return _wire_get_network_id__method__ProtoTransportImpl(
      port_,
      that,
    );
  }

  late final _wire_get_network_id__method__ProtoTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_ProtoTransportImpl>)>>(
      'wire_get_network_id__method__ProtoTransportImpl');
  late final _wire_get_network_id__method__ProtoTransportImpl =
      _wire_get_network_id__method__ProtoTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_ProtoTransportImpl>)>();

  void wire_simulate_transaction_tree__method__ProtoTransportImpl(
    int port_,
    ffi.Pointer<wire_ProtoTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
    ffi.Pointer<wire_int_32_list> ignored_compute_phase_codes,
    ffi.Pointer<wire_int_32_list> ignored_action_phase_codes,
  ) {
    return _wire_simulate_transaction_tree__method__ProtoTransportImpl(
      port_,
      that,
      signed_message,
      ignored_compute_phase_codes,
      ignored_action_phase_codes,
    );
  }

  late final _wire_simulate_transaction_tree__method__ProtoTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_ProtoTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_int_32_list>,
                      ffi.Pointer<wire_int_32_list>)>>(
          'wire_simulate_transaction_tree__method__ProtoTransportImpl');
  late final _wire_simulate_transaction_tree__method__ProtoTransportImpl =
      _wire_simulate_transaction_tree__method__ProtoTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_ProtoTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_int_32_list>,
              ffi.Pointer<wire_int_32_list>)>();

  void wire_new__static_method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcConnectionDartWrapper> jrpc_connection,
  ) {
    return _wire_new__static_method__JrpcTransportImpl(
      port_,
      jrpc_connection,
    );
  }

  late final _wire_new__static_method__JrpcTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_JrpcConnectionDartWrapper>)>>(
      'wire_new__static_method__JrpcTransportImpl');
  late final _wire_new__static_method__JrpcTransportImpl =
      _wire_new__static_method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcConnectionDartWrapper>)>();

  void wire_get_contract_state__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_contract_state__method__JrpcTransportImpl(
      port_,
      that,
      address,
    );
  }

  late final _wire_get_contract_state__method__JrpcTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_JrpcTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_contract_state__method__JrpcTransportImpl');
  late final _wire_get_contract_state__method__JrpcTransportImpl =
      _wire_get_contract_state__method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_full_contract_state__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_full_contract_state__method__JrpcTransportImpl(
      port_,
      that,
      address,
    );
  }

  late final _wire_get_full_contract_state__method__JrpcTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_JrpcTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_full_contract_state__method__JrpcTransportImpl');
  late final _wire_get_full_contract_state__method__JrpcTransportImpl =
      _wire_get_full_contract_state__method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_accounts_by_code_hash__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> code_hash,
    int limit,
    ffi.Pointer<wire_uint_8_list> continuation,
  ) {
    return _wire_get_accounts_by_code_hash__method__JrpcTransportImpl(
      port_,
      that,
      code_hash,
      limit,
      continuation,
    );
  }

  late final _wire_get_accounts_by_code_hash__method__JrpcTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_JrpcTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Uint8,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_accounts_by_code_hash__method__JrpcTransportImpl');
  late final _wire_get_accounts_by_code_hash__method__JrpcTransportImpl =
      _wire_get_accounts_by_code_hash__method__JrpcTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              int,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_transactions__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> address,
    ffi.Pointer<wire_uint_8_list> from_lt,
    int count,
  ) {
    return _wire_get_transactions__method__JrpcTransportImpl(
      port_,
      that,
      address,
      from_lt,
      count,
    );
  }

  late final _wire_get_transactions__method__JrpcTransportImplPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Uint8)>>('wire_get_transactions__method__JrpcTransportImpl');
  late final _wire_get_transactions__method__JrpcTransportImpl =
      _wire_get_transactions__method__JrpcTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              int)>();

  void wire_get_transaction__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> hash,
  ) {
    return _wire_get_transaction__method__JrpcTransportImpl(
      port_,
      that,
      hash,
    );
  }

  late final _wire_get_transaction__method__JrpcTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_JrpcTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_transaction__method__JrpcTransportImpl');
  late final _wire_get_transaction__method__JrpcTransportImpl =
      _wire_get_transaction__method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_dst_transaction__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> message_hash,
  ) {
    return _wire_get_dst_transaction__method__JrpcTransportImpl(
      port_,
      that,
      message_hash,
    );
  }

  late final _wire_get_dst_transaction__method__JrpcTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_JrpcTransportImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_dst_transaction__method__JrpcTransportImpl');
  late final _wire_get_dst_transaction__method__JrpcTransportImpl =
      _wire_get_dst_transaction__method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_signature_id__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
  ) {
    return _wire_get_signature_id__method__JrpcTransportImpl(
      port_,
      that,
    );
  }

  late final _wire_get_signature_id__method__JrpcTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_JrpcTransportImpl>)>>(
      'wire_get_signature_id__method__JrpcTransportImpl');
  late final _wire_get_signature_id__method__JrpcTransportImpl =
      _wire_get_signature_id__method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcTransportImpl>)>();

  void wire_get_blockchain_config__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    bool force,
  ) {
    return _wire_get_blockchain_config__method__JrpcTransportImpl(
      port_,
      that,
      force,
    );
  }

  late final _wire_get_blockchain_config__method__JrpcTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_JrpcTransportImpl>, ffi.Bool)>>(
          'wire_get_blockchain_config__method__JrpcTransportImpl');
  late final _wire_get_blockchain_config__method__JrpcTransportImpl =
      _wire_get_blockchain_config__method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcTransportImpl>, bool)>();

  void wire_get_network_id__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
  ) {
    return _wire_get_network_id__method__JrpcTransportImpl(
      port_,
      that,
    );
  }

  late final _wire_get_network_id__method__JrpcTransportImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_JrpcTransportImpl>)>>(
      'wire_get_network_id__method__JrpcTransportImpl');
  late final _wire_get_network_id__method__JrpcTransportImpl =
      _wire_get_network_id__method__JrpcTransportImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_JrpcTransportImpl>)>();

  void wire_simulate_transaction_tree__method__JrpcTransportImpl(
    int port_,
    ffi.Pointer<wire_JrpcTransportImpl> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
    ffi.Pointer<wire_int_32_list> ignored_compute_phase_codes,
    ffi.Pointer<wire_int_32_list> ignored_action_phase_codes,
  ) {
    return _wire_simulate_transaction_tree__method__JrpcTransportImpl(
      port_,
      that,
      signed_message,
      ignored_compute_phase_codes,
      ignored_action_phase_codes,
    );
  }

  late final _wire_simulate_transaction_tree__method__JrpcTransportImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_JrpcTransportImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_int_32_list>,
                      ffi.Pointer<wire_int_32_list>)>>(
          'wire_simulate_transaction_tree__method__JrpcTransportImpl');
  late final _wire_simulate_transaction_tree__method__JrpcTransportImpl =
      _wire_simulate_transaction_tree__method__JrpcTransportImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_JrpcTransportImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_int_32_list>,
              ffi.Pointer<wire_int_32_list>)>();

  void wire_subscribe__static_method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
    ffi.Pointer<wire_uint_8_list> owner,
    ffi.Pointer<wire_uint_8_list> root_token_contract,
    wire_ArcTransportBoxTrait transport,
  ) {
    return _wire_subscribe__static_method__TokenWalletDartWrapper(
      port_,
      instance_hash,
      owner,
      root_token_contract,
      transport,
    );
  }

  late final _wire_subscribe__static_method__TokenWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      wire_ArcTransportBoxTrait)>>(
          'wire_subscribe__static_method__TokenWalletDartWrapper');
  late final _wire_subscribe__static_method__TokenWalletDartWrapper =
      _wire_subscribe__static_method__TokenWalletDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              wire_ArcTransportBoxTrait)>();

  void wire_owner__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
  ) {
    return _wire_owner__method__TokenWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_owner__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TokenWalletDartWrapper>)>>(
      'wire_owner__method__TokenWalletDartWrapper');
  late final _wire_owner__method__TokenWalletDartWrapper =
      _wire_owner__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>)>();

  void wire_address__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
  ) {
    return _wire_address__method__TokenWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_address__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TokenWalletDartWrapper>)>>(
      'wire_address__method__TokenWalletDartWrapper');
  late final _wire_address__method__TokenWalletDartWrapper =
      _wire_address__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>)>();

  void wire_symbol__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
  ) {
    return _wire_symbol__method__TokenWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_symbol__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TokenWalletDartWrapper>)>>(
      'wire_symbol__method__TokenWalletDartWrapper');
  late final _wire_symbol__method__TokenWalletDartWrapper =
      _wire_symbol__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>)>();

  void wire_version__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
  ) {
    return _wire_version__method__TokenWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_version__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TokenWalletDartWrapper>)>>(
      'wire_version__method__TokenWalletDartWrapper');
  late final _wire_version__method__TokenWalletDartWrapper =
      _wire_version__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>)>();

  void wire_balance__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
  ) {
    return _wire_balance__method__TokenWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_balance__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TokenWalletDartWrapper>)>>(
      'wire_balance__method__TokenWalletDartWrapper');
  late final _wire_balance__method__TokenWalletDartWrapper =
      _wire_balance__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>)>();

  void wire_contract_state__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
  ) {
    return _wire_contract_state__method__TokenWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_contract_state__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TokenWalletDartWrapper>)>>(
      'wire_contract_state__method__TokenWalletDartWrapper');
  late final _wire_contract_state__method__TokenWalletDartWrapper =
      _wire_contract_state__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>)>();

  void wire_estimate_min_attached_amount__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> destination,
    ffi.Pointer<wire_uint_8_list> amount,
    bool notify_receiver,
    ffi.Pointer<wire_uint_8_list> payload,
  ) {
    return _wire_estimate_min_attached_amount__method__TokenWalletDartWrapper(
      port_,
      that,
      destination,
      amount,
      notify_receiver,
      payload,
    );
  }

  late final _wire_estimate_min_attached_amount__method__TokenWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_TokenWalletDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Bool,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_estimate_min_attached_amount__method__TokenWalletDartWrapper');
  late final _wire_estimate_min_attached_amount__method__TokenWalletDartWrapper =
      _wire_estimate_min_attached_amount__method__TokenWalletDartWrapperPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_TokenWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  bool,
                  ffi.Pointer<wire_uint_8_list>)>();

  void wire_prepare_transfer__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> destination,
    ffi.Pointer<wire_uint_8_list> amount,
    bool notify_receiver,
    ffi.Pointer<wire_uint_8_list> attached_amount,
    ffi.Pointer<wire_uint_8_list> payload,
  ) {
    return _wire_prepare_transfer__method__TokenWalletDartWrapper(
      port_,
      that,
      destination,
      amount,
      notify_receiver,
      attached_amount,
      payload,
    );
  }

  late final _wire_prepare_transfer__method__TokenWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_TokenWalletDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Bool,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_prepare_transfer__method__TokenWalletDartWrapper');
  late final _wire_prepare_transfer__method__TokenWalletDartWrapper =
      _wire_prepare_transfer__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_TokenWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              bool,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_refresh__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
  ) {
    return _wire_refresh__method__TokenWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_refresh__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TokenWalletDartWrapper>)>>(
      'wire_refresh__method__TokenWalletDartWrapper');
  late final _wire_refresh__method__TokenWalletDartWrapper =
      _wire_refresh__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>)>();

  void wire_preload_transactions__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> from_lt,
  ) {
    return _wire_preload_transactions__method__TokenWalletDartWrapper(
      port_,
      that,
      from_lt,
    );
  }

  late final _wire_preload_transactions__method__TokenWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_TokenWalletDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_preload_transactions__method__TokenWalletDartWrapper');
  late final _wire_preload_transactions__method__TokenWalletDartWrapper =
      _wire_preload_transactions__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_handle_block__method__TokenWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TokenWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> block,
  ) {
    return _wire_handle_block__method__TokenWalletDartWrapper(
      port_,
      that,
      block,
    );
  }

  late final _wire_handle_block__method__TokenWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_TokenWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_handle_block__method__TokenWalletDartWrapper');
  late final _wire_handle_block__method__TokenWalletDartWrapper =
      _wire_handle_block__method__TokenWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TokenWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_token_wallet_details__static_method__TokenWalletDartWrapper(
    int port_,
    wire_ArcTransportBoxTrait transport,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_token_wallet_details__static_method__TokenWalletDartWrapper(
      port_,
      transport,
      address,
    );
  }

  late final _wire_get_token_wallet_details__static_method__TokenWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, wire_ArcTransportBoxTrait,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_token_wallet_details__static_method__TokenWalletDartWrapper');
  late final _wire_get_token_wallet_details__static_method__TokenWalletDartWrapper =
      _wire_get_token_wallet_details__static_method__TokenWalletDartWrapperPtr
          .asFunction<
              void Function(int, wire_ArcTransportBoxTrait,
                  ffi.Pointer<wire_uint_8_list>)>();

  void
      wire_get_token_root_details_from_token_wallet__static_method__TokenWalletDartWrapper(
    int port_,
    wire_ArcTransportBoxTrait transport,
    ffi.Pointer<wire_uint_8_list> token_wallet_address,
  ) {
    return _wire_get_token_root_details_from_token_wallet__static_method__TokenWalletDartWrapper(
      port_,
      transport,
      token_wallet_address,
    );
  }

  late final _wire_get_token_root_details_from_token_wallet__static_method__TokenWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, wire_ArcTransportBoxTrait,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_token_root_details_from_token_wallet__static_method__TokenWalletDartWrapper');
  late final _wire_get_token_root_details_from_token_wallet__static_method__TokenWalletDartWrapper =
      _wire_get_token_root_details_from_token_wallet__static_method__TokenWalletDartWrapperPtr
          .asFunction<
              void Function(int, wire_ArcTransportBoxTrait,
                  ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_token_root_details__static_method__TokenWalletDartWrapper(
    int port_,
    wire_ArcTransportBoxTrait transport,
    ffi.Pointer<wire_uint_8_list> token_root_address,
  ) {
    return _wire_get_token_root_details__static_method__TokenWalletDartWrapper(
      port_,
      transport,
      token_root_address,
    );
  }

  late final _wire_get_token_root_details__static_method__TokenWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, wire_ArcTransportBoxTrait,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_token_root_details__static_method__TokenWalletDartWrapper');
  late final _wire_get_token_root_details__static_method__TokenWalletDartWrapper =
      _wire_get_token_root_details__static_method__TokenWalletDartWrapperPtr
          .asFunction<
              void Function(int, wire_ArcTransportBoxTrait,
                  ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_StorageDartWrapper> storage,
    ffi.Pointer<wire_list_key_signer> signers,
    ffi.Pointer<wire_LedgerConnectionDartWrapper> ledger_connection,
  ) {
    return _wire_new__static_method__KeystoreDartWrapper(
      port_,
      storage,
      signers,
      ledger_connection,
    );
  }

  late final _wire_new__static_method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_StorageDartWrapper>,
                  ffi.Pointer<wire_list_key_signer>,
                  ffi.Pointer<wire_LedgerConnectionDartWrapper>)>>(
      'wire_new__static_method__KeystoreDartWrapper');
  late final _wire_new__static_method__KeystoreDartWrapper =
      _wire_new__static_method__KeystoreDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_StorageDartWrapper>,
              ffi.Pointer<wire_list_key_signer>,
              ffi.Pointer<wire_LedgerConnectionDartWrapper>)>();

  void wire_get_entries__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
  ) {
    return _wire_get_entries__method__KeystoreDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_get_entries__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_KeystoreDartWrapper>)>>(
      'wire_get_entries__method__KeystoreDartWrapper');
  late final _wire_get_entries__method__KeystoreDartWrapper =
      _wire_get_entries__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>)>();

  void wire_add_key__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_add_key__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      input,
    );
  }

  late final _wire_add_key__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_add_key__method__KeystoreDartWrapper');
  late final _wire_add_key__method__KeystoreDartWrapper =
      _wire_add_key__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_add_keys__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_add_keys__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      input,
    );
  }

  late final _wire_add_keys__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_add_keys__method__KeystoreDartWrapper');
  late final _wire_add_keys__method__KeystoreDartWrapper =
      _wire_add_keys__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_update_key__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_update_key__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      input,
    );
  }

  late final _wire_update_key__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_update_key__method__KeystoreDartWrapper');
  late final _wire_update_key__method__KeystoreDartWrapper =
      _wire_update_key__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_export_seed__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_export_seed__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      input,
    );
  }

  late final _wire_export_seed__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_export_seed__method__KeystoreDartWrapper');
  late final _wire_export_seed__method__KeystoreDartWrapper =
      _wire_export_seed__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_public_keys__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_get_public_keys__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      input,
    );
  }

  late final _wire_get_public_keys__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_get_public_keys__method__KeystoreDartWrapper');
  late final _wire_get_public_keys__method__KeystoreDartWrapper =
      _wire_get_public_keys__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_encrypt__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> data,
    ffi.Pointer<wire_StringList> public_keys,
    ffi.Pointer<wire_uint_8_list> algorithm,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_encrypt__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      data,
      public_keys,
      algorithm,
      input,
    );
  }

  late final _wire_encrypt__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_StringList>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_encrypt__method__KeystoreDartWrapper');
  late final _wire_encrypt__method__KeystoreDartWrapper =
      _wire_encrypt__method__KeystoreDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_StringList>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_decrypt__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> data,
    ffi.Pointer<wire_uint_8_list> input,
  ) {
    return _wire_decrypt__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      data,
      input,
    );
  }

  late final _wire_decrypt__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_decrypt__method__KeystoreDartWrapper');
  late final _wire_decrypt__method__KeystoreDartWrapper =
      _wire_decrypt__method__KeystoreDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_sign__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> data,
    ffi.Pointer<wire_uint_8_list> input,
    ffi.Pointer<ffi.Int32> signature_id,
  ) {
    return _wire_sign__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      data,
      input,
      signature_id,
    );
  }

  late final _wire_sign__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<ffi.Int32>)>>(
      'wire_sign__method__KeystoreDartWrapper');
  late final _wire_sign__method__KeystoreDartWrapper =
      _wire_sign__method__KeystoreDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<ffi.Int32>)>();

  void wire_sign_data__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> data,
    ffi.Pointer<wire_uint_8_list> input,
    ffi.Pointer<ffi.Int32> signature_id,
  ) {
    return _wire_sign_data__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      data,
      input,
      signature_id,
    );
  }

  late final _wire_sign_data__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<ffi.Int32>)>>(
      'wire_sign_data__method__KeystoreDartWrapper');
  late final _wire_sign_data__method__KeystoreDartWrapper =
      _wire_sign_data__method__KeystoreDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<ffi.Int32>)>();

  void wire_sign_data_raw__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_KeySigner> signer,
    ffi.Pointer<wire_uint_8_list> data,
    ffi.Pointer<wire_uint_8_list> input,
    ffi.Pointer<ffi.Int32> signature_id,
  ) {
    return _wire_sign_data_raw__method__KeystoreDartWrapper(
      port_,
      that,
      signer,
      data,
      input,
      signature_id,
    );
  }

  late final _wire_sign_data_raw__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_KeySigner>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<ffi.Int32>)>>(
      'wire_sign_data_raw__method__KeystoreDartWrapper');
  late final _wire_sign_data_raw__method__KeystoreDartWrapper =
      _wire_sign_data_raw__method__KeystoreDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_KeySigner>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<ffi.Int32>)>();

  void wire_remove_key__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> public_key,
  ) {
    return _wire_remove_key__method__KeystoreDartWrapper(
      port_,
      that,
      public_key,
    );
  }

  late final _wire_remove_key__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_remove_key__method__KeystoreDartWrapper');
  late final _wire_remove_key__method__KeystoreDartWrapper =
      _wire_remove_key__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_remove_keys__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_StringList> public_keys,
  ) {
    return _wire_remove_keys__method__KeystoreDartWrapper(
      port_,
      that,
      public_keys,
    );
  }

  late final _wire_remove_keys__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_StringList>)>>(
      'wire_remove_keys__method__KeystoreDartWrapper');
  late final _wire_remove_keys__method__KeystoreDartWrapper =
      _wire_remove_keys__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_StringList>)>();

  void wire_is_password_cached__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> public_key,
    int duration,
  ) {
    return _wire_is_password_cached__method__KeystoreDartWrapper(
      port_,
      that,
      public_key,
      duration,
    );
  }

  late final _wire_is_password_cached__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_KeystoreDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Uint64)>>(
      'wire_is_password_cached__method__KeystoreDartWrapper');
  late final _wire_is_password_cached__method__KeystoreDartWrapper =
      _wire_is_password_cached__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>,
              ffi.Pointer<wire_uint_8_list>, int)>();

  void wire_clear_keystore__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
  ) {
    return _wire_clear_keystore__method__KeystoreDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_clear_keystore__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_KeystoreDartWrapper>)>>(
      'wire_clear_keystore__method__KeystoreDartWrapper');
  late final _wire_clear_keystore__method__KeystoreDartWrapper =
      _wire_clear_keystore__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>)>();

  void wire_reload_keystore__method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_KeystoreDartWrapper> that,
  ) {
    return _wire_reload_keystore__method__KeystoreDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_reload_keystore__method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_KeystoreDartWrapper>)>>(
      'wire_reload_keystore__method__KeystoreDartWrapper');
  late final _wire_reload_keystore__method__KeystoreDartWrapper =
      _wire_reload_keystore__method__KeystoreDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_KeystoreDartWrapper>)>();

  void wire_verify_data__static_method__KeystoreDartWrapper(
    int port_,
    ffi.Pointer<wire_list_key_signer> signers,
    ffi.Pointer<wire_LedgerConnectionDartWrapper> ledger_connection,
    ffi.Pointer<wire_uint_8_list> data,
  ) {
    return _wire_verify_data__static_method__KeystoreDartWrapper(
      port_,
      signers,
      ledger_connection,
      data,
    );
  }

  late final _wire_verify_data__static_method__KeystoreDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_list_key_signer>,
                  ffi.Pointer<wire_LedgerConnectionDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_verify_data__static_method__KeystoreDartWrapper');
  late final _wire_verify_data__static_method__KeystoreDartWrapper =
      _wire_verify_data__static_method__KeystoreDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_list_key_signer>,
              ffi.Pointer<wire_LedgerConnectionDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_StorageDartWrapper> storage,
  ) {
    return _wire_new__static_method__AccountsStorageImpl(
      port_,
      storage,
    );
  }

  late final _wire_new__static_method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_StorageDartWrapper>)>>(
      'wire_new__static_method__AccountsStorageImpl');
  late final _wire_new__static_method__AccountsStorageImpl =
      _wire_new__static_method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_StorageDartWrapper>)>();

  void wire_get_entries__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
  ) {
    return _wire_get_entries__method__AccountsStorageImpl(
      port_,
      that,
    );
  }

  late final _wire_get_entries__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_AccountsStorageImpl>)>>(
      'wire_get_entries__method__AccountsStorageImpl');
  late final _wire_get_entries__method__AccountsStorageImpl =
      _wire_get_entries__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>)>();

  void wire_add_account__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> account,
  ) {
    return _wire_add_account__method__AccountsStorageImpl(
      port_,
      that,
      account,
    );
  }

  late final _wire_add_account__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_AccountsStorageImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_add_account__method__AccountsStorageImpl');
  late final _wire_add_account__method__AccountsStorageImpl =
      _wire_add_account__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_add_accounts__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> accounts,
  ) {
    return _wire_add_accounts__method__AccountsStorageImpl(
      port_,
      that,
      accounts,
    );
  }

  late final _wire_add_accounts__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_AccountsStorageImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_add_accounts__method__AccountsStorageImpl');
  late final _wire_add_accounts__method__AccountsStorageImpl =
      _wire_add_accounts__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_rename_account__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> account_address,
    ffi.Pointer<wire_uint_8_list> name,
  ) {
    return _wire_rename_account__method__AccountsStorageImpl(
      port_,
      that,
      account_address,
      name,
    );
  }

  late final _wire_rename_account__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_AccountsStorageImpl>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_rename_account__method__AccountsStorageImpl');
  late final _wire_rename_account__method__AccountsStorageImpl =
      _wire_rename_account__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  void wire_add_token_wallet__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> account_address,
    ffi.Pointer<wire_uint_8_list> network_group,
    ffi.Pointer<wire_uint_8_list> root_token_contract,
  ) {
    return _wire_add_token_wallet__method__AccountsStorageImpl(
      port_,
      that,
      account_address,
      network_group,
      root_token_contract,
    );
  }

  late final _wire_add_token_wallet__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_AccountsStorageImpl>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_add_token_wallet__method__AccountsStorageImpl');
  late final _wire_add_token_wallet__method__AccountsStorageImpl =
      _wire_add_token_wallet__method__AccountsStorageImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_add_token_wallets__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> account_address,
    ffi.Pointer<wire_uint_8_list> network_group,
    ffi.Pointer<wire_StringList> root_token_contracts,
  ) {
    return _wire_add_token_wallets__method__AccountsStorageImpl(
      port_,
      that,
      account_address,
      network_group,
      root_token_contracts,
    );
  }

  late final _wire_add_token_wallets__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_AccountsStorageImpl>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_StringList>)>>(
      'wire_add_token_wallets__method__AccountsStorageImpl');
  late final _wire_add_token_wallets__method__AccountsStorageImpl =
      _wire_add_token_wallets__method__AccountsStorageImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_StringList>)>();

  void wire_remove_token_wallet__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> account_address,
    ffi.Pointer<wire_uint_8_list> network_group,
    ffi.Pointer<wire_uint_8_list> root_token_contract,
  ) {
    return _wire_remove_token_wallet__method__AccountsStorageImpl(
      port_,
      that,
      account_address,
      network_group,
      root_token_contract,
    );
  }

  late final _wire_remove_token_wallet__method__AccountsStorageImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_AccountsStorageImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_remove_token_wallet__method__AccountsStorageImpl');
  late final _wire_remove_token_wallet__method__AccountsStorageImpl =
      _wire_remove_token_wallet__method__AccountsStorageImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_remove_token_wallets__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> account_address,
    ffi.Pointer<wire_uint_8_list> network_group,
    ffi.Pointer<wire_StringList> root_token_contracts,
  ) {
    return _wire_remove_token_wallets__method__AccountsStorageImpl(
      port_,
      that,
      account_address,
      network_group,
      root_token_contracts,
    );
  }

  late final _wire_remove_token_wallets__method__AccountsStorageImplPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_AccountsStorageImpl>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_StringList>)>>(
          'wire_remove_token_wallets__method__AccountsStorageImpl');
  late final _wire_remove_token_wallets__method__AccountsStorageImpl =
      _wire_remove_token_wallets__method__AccountsStorageImplPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_StringList>)>();

  void wire_remove_account__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_uint_8_list> account_address,
  ) {
    return _wire_remove_account__method__AccountsStorageImpl(
      port_,
      that,
      account_address,
    );
  }

  late final _wire_remove_account__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_AccountsStorageImpl>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_remove_account__method__AccountsStorageImpl');
  late final _wire_remove_account__method__AccountsStorageImpl =
      _wire_remove_account__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_remove_accounts__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
    ffi.Pointer<wire_StringList> account_addresses,
  ) {
    return _wire_remove_accounts__method__AccountsStorageImpl(
      port_,
      that,
      account_addresses,
    );
  }

  late final _wire_remove_accounts__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_AccountsStorageImpl>,
                  ffi.Pointer<wire_StringList>)>>(
      'wire_remove_accounts__method__AccountsStorageImpl');
  late final _wire_remove_accounts__method__AccountsStorageImpl =
      _wire_remove_accounts__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>,
              ffi.Pointer<wire_StringList>)>();

  void wire_clear__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
  ) {
    return _wire_clear__method__AccountsStorageImpl(
      port_,
      that,
    );
  }

  late final _wire_clear__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_AccountsStorageImpl>)>>(
      'wire_clear__method__AccountsStorageImpl');
  late final _wire_clear__method__AccountsStorageImpl =
      _wire_clear__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>)>();

  void wire_reload__method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_AccountsStorageImpl> that,
  ) {
    return _wire_reload__method__AccountsStorageImpl(
      port_,
      that,
    );
  }

  late final _wire_reload__method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_AccountsStorageImpl>)>>(
      'wire_reload__method__AccountsStorageImpl');
  late final _wire_reload__method__AccountsStorageImpl =
      _wire_reload__method__AccountsStorageImplPtr.asFunction<
          void Function(int, ffi.Pointer<wire_AccountsStorageImpl>)>();

  void wire_verify_data__static_method__AccountsStorageImpl(
    int port_,
    ffi.Pointer<wire_uint_8_list> data,
  ) {
    return _wire_verify_data__static_method__AccountsStorageImpl(
      port_,
      data,
    );
  }

  late final _wire_verify_data__static_method__AccountsStorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_verify_data__static_method__AccountsStorageImpl');
  late final _wire_verify_data__static_method__AccountsStorageImpl =
      _wire_verify_data__static_method__AccountsStorageImplPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_subscribe__static_method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
    ffi.Pointer<wire_uint_8_list> address,
    bool preload_transactions,
    wire_ArcTransportBoxTrait transport,
  ) {
    return _wire_subscribe__static_method__GenericContractDartWrapper(
      port_,
      instance_hash,
      address,
      preload_transactions,
      transport,
    );
  }

  late final _wire_subscribe__static_method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Bool,
                      wire_ArcTransportBoxTrait)>>(
          'wire_subscribe__static_method__GenericContractDartWrapper');
  late final _wire_subscribe__static_method__GenericContractDartWrapper =
      _wire_subscribe__static_method__GenericContractDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              bool,
              wire_ArcTransportBoxTrait)>();

  void wire_address__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
  ) {
    return _wire_address__method__GenericContractDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_address__method__GenericContractDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_GenericContractDartWrapper>)>>(
      'wire_address__method__GenericContractDartWrapper');
  late final _wire_address__method__GenericContractDartWrapper =
      _wire_address__method__GenericContractDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>)>();

  void wire_contract_state__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
  ) {
    return _wire_contract_state__method__GenericContractDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_contract_state__method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_GenericContractDartWrapper>)>>(
          'wire_contract_state__method__GenericContractDartWrapper');
  late final _wire_contract_state__method__GenericContractDartWrapper =
      _wire_contract_state__method__GenericContractDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>)>();

  void wire_pending_transactions__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
  ) {
    return _wire_pending_transactions__method__GenericContractDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_pending_transactions__method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_GenericContractDartWrapper>)>>(
          'wire_pending_transactions__method__GenericContractDartWrapper');
  late final _wire_pending_transactions__method__GenericContractDartWrapper =
      _wire_pending_transactions__method__GenericContractDartWrapperPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_GenericContractDartWrapper>)>();

  void wire_polling_method__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
  ) {
    return _wire_polling_method__method__GenericContractDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_polling_method__method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_GenericContractDartWrapper>)>>(
          'wire_polling_method__method__GenericContractDartWrapper');
  late final _wire_polling_method__method__GenericContractDartWrapper =
      _wire_polling_method__method__GenericContractDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>)>();

  void wire_execute_transaction_locally__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
    ffi.Pointer<wire_TransactionExecutionOptions> options,
  ) {
    return _wire_execute_transaction_locally__method__GenericContractDartWrapper(
      port_,
      that,
      signed_message,
      options,
    );
  }

  late final _wire_execute_transaction_locally__method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_GenericContractDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_TransactionExecutionOptions>)>>(
          'wire_execute_transaction_locally__method__GenericContractDartWrapper');
  late final _wire_execute_transaction_locally__method__GenericContractDartWrapper =
      _wire_execute_transaction_locally__method__GenericContractDartWrapperPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_GenericContractDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_TransactionExecutionOptions>)>();

  void wire_estimate_fees__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
  ) {
    return _wire_estimate_fees__method__GenericContractDartWrapper(
      port_,
      that,
      signed_message,
    );
  }

  late final _wire_estimate_fees__method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_GenericContractDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_estimate_fees__method__GenericContractDartWrapper');
  late final _wire_estimate_fees__method__GenericContractDartWrapper =
      _wire_estimate_fees__method__GenericContractDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_send__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
  ) {
    return _wire_send__method__GenericContractDartWrapper(
      port_,
      that,
      signed_message,
    );
  }

  late final _wire_send__method__GenericContractDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_GenericContractDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_send__method__GenericContractDartWrapper');
  late final _wire_send__method__GenericContractDartWrapper =
      _wire_send__method__GenericContractDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_refresh__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
  ) {
    return _wire_refresh__method__GenericContractDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_refresh__method__GenericContractDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_GenericContractDartWrapper>)>>(
      'wire_refresh__method__GenericContractDartWrapper');
  late final _wire_refresh__method__GenericContractDartWrapper =
      _wire_refresh__method__GenericContractDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>)>();

  void wire_preload_transactions__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> from_lt,
  ) {
    return _wire_preload_transactions__method__GenericContractDartWrapper(
      port_,
      that,
      from_lt,
    );
  }

  late final _wire_preload_transactions__method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_GenericContractDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_preload_transactions__method__GenericContractDartWrapper');
  late final _wire_preload_transactions__method__GenericContractDartWrapper =
      _wire_preload_transactions__method__GenericContractDartWrapperPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>();

  void wire_handle_block__method__GenericContractDartWrapper(
    int port_,
    ffi.Pointer<wire_GenericContractDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> block,
  ) {
    return _wire_handle_block__method__GenericContractDartWrapper(
      port_,
      that,
      block,
    );
  }

  late final _wire_handle_block__method__GenericContractDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_GenericContractDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_handle_block__method__GenericContractDartWrapper');
  late final _wire_handle_block__method__GenericContractDartWrapper =
      _wire_handle_block__method__GenericContractDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_GenericContractDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_subscribe__static_method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
    int workchain_id,
    ffi.Pointer<wire_uint_8_list> public_key,
    ffi.Pointer<wire_uint_8_list> wallet_type,
    wire_ArcTransportBoxTrait transport,
  ) {
    return _wire_subscribe__static_method__TonWalletDartWrapper(
      port_,
      instance_hash,
      workchain_id,
      public_key,
      wallet_type,
      transport,
    );
  }

  late final _wire_subscribe__static_method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Int8,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  wire_ArcTransportBoxTrait)>>(
      'wire_subscribe__static_method__TonWalletDartWrapper');
  late final _wire_subscribe__static_method__TonWalletDartWrapper =
      _wire_subscribe__static_method__TonWalletDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_uint_8_list>,
              int,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              wire_ArcTransportBoxTrait)>();

  void wire_subscribe_by_address__static_method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
    ffi.Pointer<wire_uint_8_list> address,
    wire_ArcTransportBoxTrait transport,
  ) {
    return _wire_subscribe_by_address__static_method__TonWalletDartWrapper(
      port_,
      instance_hash,
      address,
      transport,
    );
  }

  late final _wire_subscribe_by_address__static_method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      wire_ArcTransportBoxTrait)>>(
          'wire_subscribe_by_address__static_method__TonWalletDartWrapper');
  late final _wire_subscribe_by_address__static_method__TonWalletDartWrapper =
      _wire_subscribe_by_address__static_method__TonWalletDartWrapperPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>, wire_ArcTransportBoxTrait)>();

  void wire_subscribe_by_existing__static_method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
    ffi.Pointer<wire_uint_8_list> existing_wallet,
    wire_ArcTransportBoxTrait transport,
  ) {
    return _wire_subscribe_by_existing__static_method__TonWalletDartWrapper(
      port_,
      instance_hash,
      existing_wallet,
      transport,
    );
  }

  late final _wire_subscribe_by_existing__static_method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      wire_ArcTransportBoxTrait)>>(
          'wire_subscribe_by_existing__static_method__TonWalletDartWrapper');
  late final _wire_subscribe_by_existing__static_method__TonWalletDartWrapper =
      _wire_subscribe_by_existing__static_method__TonWalletDartWrapperPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>, wire_ArcTransportBoxTrait)>();

  void wire_workchain__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_workchain__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_workchain__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_workchain__method__TonWalletDartWrapper');
  late final _wire_workchain__method__TonWalletDartWrapper =
      _wire_workchain__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_address__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_address__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_address__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_address__method__TonWalletDartWrapper');
  late final _wire_address__method__TonWalletDartWrapper =
      _wire_address__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_public_key__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_public_key__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_public_key__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_public_key__method__TonWalletDartWrapper');
  late final _wire_public_key__method__TonWalletDartWrapper =
      _wire_public_key__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_wallet_type__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_wallet_type__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_wallet_type__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_wallet_type__method__TonWalletDartWrapper');
  late final _wire_wallet_type__method__TonWalletDartWrapper =
      _wire_wallet_type__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_contract_state__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_contract_state__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_contract_state__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_contract_state__method__TonWalletDartWrapper');
  late final _wire_contract_state__method__TonWalletDartWrapper =
      _wire_contract_state__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_pending_transactions__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_pending_transactions__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_pending_transactions__method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
          'wire_pending_transactions__method__TonWalletDartWrapper');
  late final _wire_pending_transactions__method__TonWalletDartWrapper =
      _wire_pending_transactions__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_polling_method__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_polling_method__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_polling_method__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_polling_method__method__TonWalletDartWrapper');
  late final _wire_polling_method__method__TonWalletDartWrapper =
      _wire_polling_method__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_details__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_details__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_details__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_details__method__TonWalletDartWrapper');
  late final _wire_details__method__TonWalletDartWrapper =
      _wire_details__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_unconfirmed_transactions__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_unconfirmed_transactions__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_unconfirmed_transactions__method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
          'wire_unconfirmed_transactions__method__TonWalletDartWrapper');
  late final _wire_unconfirmed_transactions__method__TonWalletDartWrapper =
      _wire_unconfirmed_transactions__method__TonWalletDartWrapperPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_custodians__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_custodians__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_custodians__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_custodians__method__TonWalletDartWrapper');
  late final _wire_custodians__method__TonWalletDartWrapper =
      _wire_custodians__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_prepare_deploy__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> expiration,
  ) {
    return _wire_prepare_deploy__method__TonWalletDartWrapper(
      port_,
      that,
      expiration,
    );
  }

  late final _wire_prepare_deploy__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_TonWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_prepare_deploy__method__TonWalletDartWrapper');
  late final _wire_prepare_deploy__method__TonWalletDartWrapper =
      _wire_prepare_deploy__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_prepare_deploy_with_multiple_owners__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> expiration,
    ffi.Pointer<wire_StringList> custodians,
    int req_confirms,
  ) {
    return _wire_prepare_deploy_with_multiple_owners__method__TonWalletDartWrapper(
      port_,
      that,
      expiration,
      custodians,
      req_confirms,
    );
  }

  late final _wire_prepare_deploy_with_multiple_owners__method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_TonWalletDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_StringList>,
                      ffi.Uint8)>>(
          'wire_prepare_deploy_with_multiple_owners__method__TonWalletDartWrapper');
  late final _wire_prepare_deploy_with_multiple_owners__method__TonWalletDartWrapper =
      _wire_prepare_deploy_with_multiple_owners__method__TonWalletDartWrapperPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_TonWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_StringList>,
                  int)>();

  void wire_prepare_transfer__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> contract_state,
    ffi.Pointer<wire_uint_8_list> public_key,
    ffi.Pointer<wire_uint_8_list> destination,
    ffi.Pointer<wire_uint_8_list> amount,
    bool bounce,
    ffi.Pointer<wire_uint_8_list> body,
    ffi.Pointer<wire_uint_8_list> expiration,
  ) {
    return _wire_prepare_transfer__method__TonWalletDartWrapper(
      port_,
      that,
      contract_state,
      public_key,
      destination,
      amount,
      bounce,
      body,
      expiration,
    );
  }

  late final _wire_prepare_transfer__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_TonWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Bool,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_prepare_transfer__method__TonWalletDartWrapper');
  late final _wire_prepare_transfer__method__TonWalletDartWrapper =
      _wire_prepare_transfer__method__TonWalletDartWrapperPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<wire_TonWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>,
              bool,
              ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_prepare_confirm_transaction__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> contract_state,
    ffi.Pointer<wire_uint_8_list> public_key,
    ffi.Pointer<wire_uint_8_list> transaction_id,
    ffi.Pointer<wire_uint_8_list> expiration,
  ) {
    return _wire_prepare_confirm_transaction__method__TonWalletDartWrapper(
      port_,
      that,
      contract_state,
      public_key,
      transaction_id,
      expiration,
    );
  }

  late final _wire_prepare_confirm_transaction__method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_TonWalletDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_prepare_confirm_transaction__method__TonWalletDartWrapper');
  late final _wire_prepare_confirm_transaction__method__TonWalletDartWrapper =
      _wire_prepare_confirm_transaction__method__TonWalletDartWrapperPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_TonWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>,
                  ffi.Pointer<wire_uint_8_list>)>();

  void wire_estimate_fees__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
  ) {
    return _wire_estimate_fees__method__TonWalletDartWrapper(
      port_,
      that,
      signed_message,
    );
  }

  late final _wire_estimate_fees__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_TonWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_estimate_fees__method__TonWalletDartWrapper');
  late final _wire_estimate_fees__method__TonWalletDartWrapper =
      _wire_estimate_fees__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_send__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> signed_message,
  ) {
    return _wire_send__method__TonWalletDartWrapper(
      port_,
      that,
      signed_message,
    );
  }

  late final _wire_send__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_TonWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_send__method__TonWalletDartWrapper');
  late final _wire_send__method__TonWalletDartWrapper =
      _wire_send__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_refresh__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
  ) {
    return _wire_refresh__method__TonWalletDartWrapper(
      port_,
      that,
    );
  }

  late final _wire_refresh__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_TonWalletDartWrapper>)>>(
      'wire_refresh__method__TonWalletDartWrapper');
  late final _wire_refresh__method__TonWalletDartWrapper =
      _wire_refresh__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>)>();

  void wire_preload_transactions__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> from_lt,
  ) {
    return _wire_preload_transactions__method__TonWalletDartWrapper(
      port_,
      that,
      from_lt,
    );
  }

  late final _wire_preload_transactions__method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_TonWalletDartWrapper>,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_preload_transactions__method__TonWalletDartWrapper');
  late final _wire_preload_transactions__method__TonWalletDartWrapper =
      _wire_preload_transactions__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_handle_block__method__TonWalletDartWrapper(
    int port_,
    ffi.Pointer<wire_TonWalletDartWrapper> that,
    ffi.Pointer<wire_uint_8_list> block,
  ) {
    return _wire_handle_block__method__TonWalletDartWrapper(
      port_,
      that,
      block,
    );
  }

  late final _wire_handle_block__method__TonWalletDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_TonWalletDartWrapper>,
                  ffi.Pointer<wire_uint_8_list>)>>(
      'wire_handle_block__method__TonWalletDartWrapper');
  late final _wire_handle_block__method__TonWalletDartWrapper =
      _wire_handle_block__method__TonWalletDartWrapperPtr.asFunction<
          void Function(int, ffi.Pointer<wire_TonWalletDartWrapper>,
              ffi.Pointer<wire_uint_8_list>)>();

  void wire_find_existing_wallets__static_method__TonWalletDartWrapper(
    int port_,
    wire_ArcTransportBoxTrait transport,
    ffi.Pointer<wire_uint_8_list> public_key,
    int workchain_id,
    ffi.Pointer<wire_uint_8_list> wallet_types,
  ) {
    return _wire_find_existing_wallets__static_method__TonWalletDartWrapper(
      port_,
      transport,
      public_key,
      workchain_id,
      wallet_types,
    );
  }

  late final _wire_find_existing_wallets__static_method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      wire_ArcTransportBoxTrait,
                      ffi.Pointer<wire_uint_8_list>,
                      ffi.Int8,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_find_existing_wallets__static_method__TonWalletDartWrapper');
  late final _wire_find_existing_wallets__static_method__TonWalletDartWrapper =
      _wire_find_existing_wallets__static_method__TonWalletDartWrapperPtr
          .asFunction<
              void Function(
                  int,
                  wire_ArcTransportBoxTrait,
                  ffi.Pointer<wire_uint_8_list>,
                  int,
                  ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_existing_wallet_info__static_method__TonWalletDartWrapper(
    int port_,
    wire_ArcTransportBoxTrait transport,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_existing_wallet_info__static_method__TonWalletDartWrapper(
      port_,
      transport,
      address,
    );
  }

  late final _wire_get_existing_wallet_info__static_method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, wire_ArcTransportBoxTrait,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_existing_wallet_info__static_method__TonWalletDartWrapper');
  late final _wire_get_existing_wallet_info__static_method__TonWalletDartWrapper =
      _wire_get_existing_wallet_info__static_method__TonWalletDartWrapperPtr
          .asFunction<
              void Function(int, wire_ArcTransportBoxTrait,
                  ffi.Pointer<wire_uint_8_list>)>();

  void wire_get_custodians__static_method__TonWalletDartWrapper(
    int port_,
    wire_ArcTransportBoxTrait transport,
    ffi.Pointer<wire_uint_8_list> address,
  ) {
    return _wire_get_custodians__static_method__TonWalletDartWrapper(
      port_,
      transport,
      address,
    );
  }

  late final _wire_get_custodians__static_method__TonWalletDartWrapperPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, wire_ArcTransportBoxTrait,
                      ffi.Pointer<wire_uint_8_list>)>>(
          'wire_get_custodians__static_method__TonWalletDartWrapper');
  late final _wire_get_custodians__static_method__TonWalletDartWrapper =
      _wire_get_custodians__static_method__TonWalletDartWrapperPtr.asFunction<
          void Function(
              int, wire_ArcTransportBoxTrait, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__JrpcConnectionDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
  ) {
    return _wire_new__static_method__JrpcConnectionDartWrapper(
      port_,
      instance_hash,
    );
  }

  late final _wire_new__static_method__JrpcConnectionDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_new__static_method__JrpcConnectionDartWrapper');
  late final _wire_new__static_method__JrpcConnectionDartWrapper =
      _wire_new__static_method__JrpcConnectionDartWrapperPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__GqlConnectionDartWrapper(
    int port_,
    bool is_local,
    ffi.Pointer<wire_uint_8_list> instance_hash,
  ) {
    return _wire_new__static_method__GqlConnectionDartWrapper(
      port_,
      is_local,
      instance_hash,
    );
  }

  late final _wire_new__static_method__GqlConnectionDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Bool, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_new__static_method__GqlConnectionDartWrapper');
  late final _wire_new__static_method__GqlConnectionDartWrapper =
      _wire_new__static_method__GqlConnectionDartWrapperPtr.asFunction<
          void Function(int, bool, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__ProtoConnectionDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
  ) {
    return _wire_new__static_method__ProtoConnectionDartWrapper(
      port_,
      instance_hash,
    );
  }

  late final _wire_new__static_method__ProtoConnectionDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_new__static_method__ProtoConnectionDartWrapper');
  late final _wire_new__static_method__ProtoConnectionDartWrapper =
      _wire_new__static_method__ProtoConnectionDartWrapperPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__LedgerConnectionDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
  ) {
    return _wire_new__static_method__LedgerConnectionDartWrapper(
      port_,
      instance_hash,
    );
  }

  late final _wire_new__static_method__LedgerConnectionDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_new__static_method__LedgerConnectionDartWrapper');
  late final _wire_new__static_method__LedgerConnectionDartWrapper =
      _wire_new__static_method__LedgerConnectionDartWrapperPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__LedgerConnectionImpl(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
  ) {
    return _wire_new__static_method__LedgerConnectionImpl(
      port_,
      instance_hash,
    );
  }

  late final _wire_new__static_method__LedgerConnectionImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_new__static_method__LedgerConnectionImpl');
  late final _wire_new__static_method__LedgerConnectionImpl =
      _wire_new__static_method__LedgerConnectionImplPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__StorageDartWrapper(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
  ) {
    return _wire_new__static_method__StorageDartWrapper(
      port_,
      instance_hash,
    );
  }

  late final _wire_new__static_method__StorageDartWrapperPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_new__static_method__StorageDartWrapper');
  late final _wire_new__static_method__StorageDartWrapper =
      _wire_new__static_method__StorageDartWrapperPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__StorageImpl(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
  ) {
    return _wire_new__static_method__StorageImpl(
      port_,
      instance_hash,
    );
  }

  late final _wire_new__static_method__StorageImplPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>)>>(
      'wire_new__static_method__StorageImpl');
  late final _wire_new__static_method__StorageImpl =
      _wire_new__static_method__StorageImplPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>)>();

  void wire_new__static_method__MyClass(
    int port_,
    int a,
  ) {
    return _wire_new__static_method__MyClass(
      port_,
      a,
    );
  }

  late final _wire_new__static_method__MyClassPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'wire_new__static_method__MyClass');
  late final _wire_new__static_method__MyClass =
      _wire_new__static_method__MyClassPtr
          .asFunction<void Function(int, int)>();

  void wire_my_format__method__MyClass(
    int port_,
    ffi.Pointer<wire_MyClass> that,
  ) {
    return _wire_my_format__method__MyClass(
      port_,
      that,
    );
  }

  late final _wire_my_format__method__MyClassPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64,
              ffi.Pointer<wire_MyClass>)>>('wire_my_format__method__MyClass');
  late final _wire_my_format__method__MyClass =
      _wire_my_format__method__MyClassPtr
          .asFunction<void Function(int, ffi.Pointer<wire_MyClass>)>();

  void wire_new__static_method__CallerTestClass(
    int port_,
    ffi.Pointer<wire_uint_8_list> instance_hash,
    int value,
  ) {
    return _wire_new__static_method__CallerTestClass(
      port_,
      instance_hash,
      value,
    );
  }

  late final _wire_new__static_method__CallerTestClassPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Int32)>>('wire_new__static_method__CallerTestClass');
  late final _wire_new__static_method__CallerTestClass =
      _wire_new__static_method__CallerTestClassPtr
          .asFunction<void Function(int, ffi.Pointer<wire_uint_8_list>, int)>();

  void wire_call_some_func__method__CallerTestClass(
    int port_,
    ffi.Pointer<wire_CallerTestClass> that,
  ) {
    return _wire_call_some_func__method__CallerTestClass(
      port_,
      that,
    );
  }

  late final _wire_call_some_func__method__CallerTestClassPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_CallerTestClass>)>>(
      'wire_call_some_func__method__CallerTestClass');
  late final _wire_call_some_func__method__CallerTestClass =
      _wire_call_some_func__method__CallerTestClassPtr
          .asFunction<void Function(int, ffi.Pointer<wire_CallerTestClass>)>();

  wire_ArcAccountsStorageBoxTrait new_ArcAccountsStorageBoxTrait() {
    return _new_ArcAccountsStorageBoxTrait();
  }

  late final _new_ArcAccountsStorageBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcAccountsStorageBoxTrait Function()>>(
          'new_ArcAccountsStorageBoxTrait');
  late final _new_ArcAccountsStorageBoxTrait =
      _new_ArcAccountsStorageBoxTraitPtr
          .asFunction<wire_ArcAccountsStorageBoxTrait Function()>();

  wire_ArcGenericContractBoxTrait new_ArcGenericContractBoxTrait() {
    return _new_ArcGenericContractBoxTrait();
  }

  late final _new_ArcGenericContractBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcGenericContractBoxTrait Function()>>(
          'new_ArcGenericContractBoxTrait');
  late final _new_ArcGenericContractBoxTrait =
      _new_ArcGenericContractBoxTraitPtr
          .asFunction<wire_ArcGenericContractBoxTrait Function()>();

  wire_ArcGqlConnectionBoxTrait new_ArcGqlConnectionBoxTrait() {
    return _new_ArcGqlConnectionBoxTrait();
  }

  late final _new_ArcGqlConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcGqlConnectionBoxTrait Function()>>(
          'new_ArcGqlConnectionBoxTrait');
  late final _new_ArcGqlConnectionBoxTrait = _new_ArcGqlConnectionBoxTraitPtr
      .asFunction<wire_ArcGqlConnectionBoxTrait Function()>();

  wire_ArcJrpcConnectionBoxTrait new_ArcJrpcConnectionBoxTrait() {
    return _new_ArcJrpcConnectionBoxTrait();
  }

  late final _new_ArcJrpcConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcJrpcConnectionBoxTrait Function()>>(
          'new_ArcJrpcConnectionBoxTrait');
  late final _new_ArcJrpcConnectionBoxTrait = _new_ArcJrpcConnectionBoxTraitPtr
      .asFunction<wire_ArcJrpcConnectionBoxTrait Function()>();

  wire_ArcKeyStoreApiBoxTrait new_ArcKeyStoreApiBoxTrait() {
    return _new_ArcKeyStoreApiBoxTrait();
  }

  late final _new_ArcKeyStoreApiBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcKeyStoreApiBoxTrait Function()>>(
          'new_ArcKeyStoreApiBoxTrait');
  late final _new_ArcKeyStoreApiBoxTrait = _new_ArcKeyStoreApiBoxTraitPtr
      .asFunction<wire_ArcKeyStoreApiBoxTrait Function()>();

  wire_ArcLedgerConnectionBoxTrait new_ArcLedgerConnectionBoxTrait() {
    return _new_ArcLedgerConnectionBoxTrait();
  }

  late final _new_ArcLedgerConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcLedgerConnectionBoxTrait Function()>>(
          'new_ArcLedgerConnectionBoxTrait');
  late final _new_ArcLedgerConnectionBoxTrait =
      _new_ArcLedgerConnectionBoxTraitPtr
          .asFunction<wire_ArcLedgerConnectionBoxTrait Function()>();

  wire_ArcProtoConnectionBoxTrait new_ArcProtoConnectionBoxTrait() {
    return _new_ArcProtoConnectionBoxTrait();
  }

  late final _new_ArcProtoConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcProtoConnectionBoxTrait Function()>>(
          'new_ArcProtoConnectionBoxTrait');
  late final _new_ArcProtoConnectionBoxTrait =
      _new_ArcProtoConnectionBoxTraitPtr
          .asFunction<wire_ArcProtoConnectionBoxTrait Function()>();

  wire_ArcStorageBoxTrait new_ArcStorageBoxTrait() {
    return _new_ArcStorageBoxTrait();
  }

  late final _new_ArcStorageBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcStorageBoxTrait Function()>>(
          'new_ArcStorageBoxTrait');
  late final _new_ArcStorageBoxTrait = _new_ArcStorageBoxTraitPtr
      .asFunction<wire_ArcStorageBoxTrait Function()>();

  wire_ArcTokenWalletBoxTrait new_ArcTokenWalletBoxTrait() {
    return _new_ArcTokenWalletBoxTrait();
  }

  late final _new_ArcTokenWalletBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcTokenWalletBoxTrait Function()>>(
          'new_ArcTokenWalletBoxTrait');
  late final _new_ArcTokenWalletBoxTrait = _new_ArcTokenWalletBoxTraitPtr
      .asFunction<wire_ArcTokenWalletBoxTrait Function()>();

  wire_ArcTonWalletBoxTrait new_ArcTonWalletBoxTrait() {
    return _new_ArcTonWalletBoxTrait();
  }

  late final _new_ArcTonWalletBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcTonWalletBoxTrait Function()>>(
          'new_ArcTonWalletBoxTrait');
  late final _new_ArcTonWalletBoxTrait = _new_ArcTonWalletBoxTraitPtr
      .asFunction<wire_ArcTonWalletBoxTrait Function()>();

  wire_ArcTransportBoxTrait new_ArcTransportBoxTrait() {
    return _new_ArcTransportBoxTrait();
  }

  late final _new_ArcTransportBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcTransportBoxTrait Function()>>(
          'new_ArcTransportBoxTrait');
  late final _new_ArcTransportBoxTrait = _new_ArcTransportBoxTraitPtr
      .asFunction<wire_ArcTransportBoxTrait Function()>();

  wire_ArcUnsignedMessageBoxTrait new_ArcUnsignedMessageBoxTrait() {
    return _new_ArcUnsignedMessageBoxTrait();
  }

  late final _new_ArcUnsignedMessageBoxTraitPtr =
      _lookup<ffi.NativeFunction<wire_ArcUnsignedMessageBoxTrait Function()>>(
          'new_ArcUnsignedMessageBoxTrait');
  late final _new_ArcUnsignedMessageBoxTrait =
      _new_ArcUnsignedMessageBoxTraitPtr
          .asFunction<wire_ArcUnsignedMessageBoxTrait Function()>();

  ffi.Pointer<wire_StringList> new_StringList_0(
    int len,
  ) {
    return _new_StringList_0(
      len,
    );
  }

  late final _new_StringList_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_StringList> Function(ffi.Int32)>>(
      'new_StringList_0');
  late final _new_StringList_0 = _new_StringList_0Ptr
      .asFunction<ffi.Pointer<wire_StringList> Function(int)>();

  ffi.Pointer<wire_AccountsStorageImpl>
      new_box_autoadd_accounts_storage_impl_0() {
    return _new_box_autoadd_accounts_storage_impl_0();
  }

  late final _new_box_autoadd_accounts_storage_impl_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_AccountsStorageImpl> Function()>>(
      'new_box_autoadd_accounts_storage_impl_0');
  late final _new_box_autoadd_accounts_storage_impl_0 =
      _new_box_autoadd_accounts_storage_impl_0Ptr
          .asFunction<ffi.Pointer<wire_AccountsStorageImpl> Function()>();

  ffi.Pointer<ffi.Bool> new_box_autoadd_bool_0(
    bool value,
  ) {
    return _new_box_autoadd_bool_0(
      value,
    );
  }

  late final _new_box_autoadd_bool_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>(
          'new_box_autoadd_bool_0');
  late final _new_box_autoadd_bool_0 = _new_box_autoadd_bool_0Ptr
      .asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<wire_CallerTestClass> new_box_autoadd_caller_test_class_0() {
    return _new_box_autoadd_caller_test_class_0();
  }

  late final _new_box_autoadd_caller_test_class_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_CallerTestClass> Function()>>(
          'new_box_autoadd_caller_test_class_0');
  late final _new_box_autoadd_caller_test_class_0 =
      _new_box_autoadd_caller_test_class_0Ptr
          .asFunction<ffi.Pointer<wire_CallerTestClass> Function()>();

  ffi.Pointer<wire_DartCallStub> new_box_autoadd_dart_call_stub_0() {
    return _new_box_autoadd_dart_call_stub_0();
  }

  late final _new_box_autoadd_dart_call_stub_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_DartCallStub> Function()>>(
          'new_box_autoadd_dart_call_stub_0');
  late final _new_box_autoadd_dart_call_stub_0 =
      _new_box_autoadd_dart_call_stub_0Ptr
          .asFunction<ffi.Pointer<wire_DartCallStub> Function()>();

  ffi.Pointer<wire_DynamicValue> new_box_autoadd_dynamic_value_0() {
    return _new_box_autoadd_dynamic_value_0();
  }

  late final _new_box_autoadd_dynamic_value_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_DynamicValue> Function()>>(
          'new_box_autoadd_dynamic_value_0');
  late final _new_box_autoadd_dynamic_value_0 =
      _new_box_autoadd_dynamic_value_0Ptr
          .asFunction<ffi.Pointer<wire_DynamicValue> Function()>();

  ffi.Pointer<wire_GenericContractDartWrapper>
      new_box_autoadd_generic_contract_dart_wrapper_0() {
    return _new_box_autoadd_generic_contract_dart_wrapper_0();
  }

  late final _new_box_autoadd_generic_contract_dart_wrapper_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_GenericContractDartWrapper>
              Function()>>('new_box_autoadd_generic_contract_dart_wrapper_0');
  late final _new_box_autoadd_generic_contract_dart_wrapper_0 =
      _new_box_autoadd_generic_contract_dart_wrapper_0Ptr.asFunction<
          ffi.Pointer<wire_GenericContractDartWrapper> Function()>();

  ffi.Pointer<wire_GqlConnectionDartWrapper>
      new_box_autoadd_gql_connection_dart_wrapper_0() {
    return _new_box_autoadd_gql_connection_dart_wrapper_0();
  }

  late final _new_box_autoadd_gql_connection_dart_wrapper_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_GqlConnectionDartWrapper>
              Function()>>('new_box_autoadd_gql_connection_dart_wrapper_0');
  late final _new_box_autoadd_gql_connection_dart_wrapper_0 =
      _new_box_autoadd_gql_connection_dart_wrapper_0Ptr
          .asFunction<ffi.Pointer<wire_GqlConnectionDartWrapper> Function()>();

  ffi.Pointer<wire_GqlTransportImpl> new_box_autoadd_gql_transport_impl_0() {
    return _new_box_autoadd_gql_transport_impl_0();
  }

  late final _new_box_autoadd_gql_transport_impl_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_GqlTransportImpl> Function()>>(
      'new_box_autoadd_gql_transport_impl_0');
  late final _new_box_autoadd_gql_transport_impl_0 =
      _new_box_autoadd_gql_transport_impl_0Ptr
          .asFunction<ffi.Pointer<wire_GqlTransportImpl> Function()>();

  ffi.Pointer<ffi.Int32> new_box_autoadd_i32_0(
    int value,
  ) {
    return _new_box_autoadd_i32_0(
      value,
    );
  }

  late final _new_box_autoadd_i32_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'new_box_autoadd_i32_0');
  late final _new_box_autoadd_i32_0 = _new_box_autoadd_i32_0Ptr
      .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_JrpcConnectionDartWrapper>
      new_box_autoadd_jrpc_connection_dart_wrapper_0() {
    return _new_box_autoadd_jrpc_connection_dart_wrapper_0();
  }

  late final _new_box_autoadd_jrpc_connection_dart_wrapper_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_JrpcConnectionDartWrapper>
              Function()>>('new_box_autoadd_jrpc_connection_dart_wrapper_0');
  late final _new_box_autoadd_jrpc_connection_dart_wrapper_0 =
      _new_box_autoadd_jrpc_connection_dart_wrapper_0Ptr
          .asFunction<ffi.Pointer<wire_JrpcConnectionDartWrapper> Function()>();

  ffi.Pointer<wire_JrpcTransportImpl> new_box_autoadd_jrpc_transport_impl_0() {
    return _new_box_autoadd_jrpc_transport_impl_0();
  }

  late final _new_box_autoadd_jrpc_transport_impl_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_JrpcTransportImpl> Function()>>(
      'new_box_autoadd_jrpc_transport_impl_0');
  late final _new_box_autoadd_jrpc_transport_impl_0 =
      _new_box_autoadd_jrpc_transport_impl_0Ptr
          .asFunction<ffi.Pointer<wire_JrpcTransportImpl> Function()>();

  ffi.Pointer<wire_KeySigner> new_box_autoadd_key_signer_0() {
    return _new_box_autoadd_key_signer_0();
  }

  late final _new_box_autoadd_key_signer_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_KeySigner> Function()>>(
          'new_box_autoadd_key_signer_0');
  late final _new_box_autoadd_key_signer_0 = _new_box_autoadd_key_signer_0Ptr
      .asFunction<ffi.Pointer<wire_KeySigner> Function()>();

  ffi.Pointer<wire_KeystoreDartWrapper>
      new_box_autoadd_keystore_dart_wrapper_0() {
    return _new_box_autoadd_keystore_dart_wrapper_0();
  }

  late final _new_box_autoadd_keystore_dart_wrapper_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_KeystoreDartWrapper> Function()>>(
      'new_box_autoadd_keystore_dart_wrapper_0');
  late final _new_box_autoadd_keystore_dart_wrapper_0 =
      _new_box_autoadd_keystore_dart_wrapper_0Ptr
          .asFunction<ffi.Pointer<wire_KeystoreDartWrapper> Function()>();

  ffi.Pointer<wire_LedgerConnectionDartWrapper>
      new_box_autoadd_ledger_connection_dart_wrapper_0() {
    return _new_box_autoadd_ledger_connection_dart_wrapper_0();
  }

  late final _new_box_autoadd_ledger_connection_dart_wrapper_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_LedgerConnectionDartWrapper>
              Function()>>('new_box_autoadd_ledger_connection_dart_wrapper_0');
  late final _new_box_autoadd_ledger_connection_dart_wrapper_0 =
      _new_box_autoadd_ledger_connection_dart_wrapper_0Ptr.asFunction<
          ffi.Pointer<wire_LedgerConnectionDartWrapper> Function()>();

  ffi.Pointer<wire_MnemonicType> new_box_autoadd_mnemonic_type_0() {
    return _new_box_autoadd_mnemonic_type_0();
  }

  late final _new_box_autoadd_mnemonic_type_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_MnemonicType> Function()>>(
          'new_box_autoadd_mnemonic_type_0');
  late final _new_box_autoadd_mnemonic_type_0 =
      _new_box_autoadd_mnemonic_type_0Ptr
          .asFunction<ffi.Pointer<wire_MnemonicType> Function()>();

  ffi.Pointer<wire_MyClass> new_box_autoadd_my_class_0() {
    return _new_box_autoadd_my_class_0();
  }

  late final _new_box_autoadd_my_class_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_MyClass> Function()>>(
          'new_box_autoadd_my_class_0');
  late final _new_box_autoadd_my_class_0 = _new_box_autoadd_my_class_0Ptr
      .asFunction<ffi.Pointer<wire_MyClass> Function()>();

  ffi.Pointer<wire_ProtoConnectionDartWrapper>
      new_box_autoadd_proto_connection_dart_wrapper_0() {
    return _new_box_autoadd_proto_connection_dart_wrapper_0();
  }

  late final _new_box_autoadd_proto_connection_dart_wrapper_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_ProtoConnectionDartWrapper>
              Function()>>('new_box_autoadd_proto_connection_dart_wrapper_0');
  late final _new_box_autoadd_proto_connection_dart_wrapper_0 =
      _new_box_autoadd_proto_connection_dart_wrapper_0Ptr.asFunction<
          ffi.Pointer<wire_ProtoConnectionDartWrapper> Function()>();

  ffi.Pointer<wire_ProtoTransportImpl>
      new_box_autoadd_proto_transport_impl_0() {
    return _new_box_autoadd_proto_transport_impl_0();
  }

  late final _new_box_autoadd_proto_transport_impl_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_ProtoTransportImpl> Function()>>(
      'new_box_autoadd_proto_transport_impl_0');
  late final _new_box_autoadd_proto_transport_impl_0 =
      _new_box_autoadd_proto_transport_impl_0Ptr
          .asFunction<ffi.Pointer<wire_ProtoTransportImpl> Function()>();

  ffi.Pointer<wire_StorageDartWrapper>
      new_box_autoadd_storage_dart_wrapper_0() {
    return _new_box_autoadd_storage_dart_wrapper_0();
  }

  late final _new_box_autoadd_storage_dart_wrapper_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_StorageDartWrapper> Function()>>(
      'new_box_autoadd_storage_dart_wrapper_0');
  late final _new_box_autoadd_storage_dart_wrapper_0 =
      _new_box_autoadd_storage_dart_wrapper_0Ptr
          .asFunction<ffi.Pointer<wire_StorageDartWrapper> Function()>();

  ffi.Pointer<wire_TokenWalletDartWrapper>
      new_box_autoadd_token_wallet_dart_wrapper_0() {
    return _new_box_autoadd_token_wallet_dart_wrapper_0();
  }

  late final _new_box_autoadd_token_wallet_dart_wrapper_0Ptr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_TokenWalletDartWrapper> Function()>>(
      'new_box_autoadd_token_wallet_dart_wrapper_0');
  late final _new_box_autoadd_token_wallet_dart_wrapper_0 =
      _new_box_autoadd_token_wallet_dart_wrapper_0Ptr
          .asFunction<ffi.Pointer<wire_TokenWalletDartWrapper> Function()>();

  ffi.Pointer<wire_TonWalletDartWrapper>
      new_box_autoadd_ton_wallet_dart_wrapper_0() {
    return _new_box_autoadd_ton_wallet_dart_wrapper_0();
  }

  late final _new_box_autoadd_ton_wallet_dart_wrapper_0Ptr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_TonWalletDartWrapper> Function()>>(
      'new_box_autoadd_ton_wallet_dart_wrapper_0');
  late final _new_box_autoadd_ton_wallet_dart_wrapper_0 =
      _new_box_autoadd_ton_wallet_dart_wrapper_0Ptr
          .asFunction<ffi.Pointer<wire_TonWalletDartWrapper> Function()>();

  ffi.Pointer<wire_TransactionExecutionOptions>
      new_box_autoadd_transaction_execution_options_0() {
    return _new_box_autoadd_transaction_execution_options_0();
  }

  late final _new_box_autoadd_transaction_execution_options_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_TransactionExecutionOptions>
              Function()>>('new_box_autoadd_transaction_execution_options_0');
  late final _new_box_autoadd_transaction_execution_options_0 =
      _new_box_autoadd_transaction_execution_options_0Ptr.asFunction<
          ffi.Pointer<wire_TransactionExecutionOptions> Function()>();

  ffi.Pointer<ffi.Uint64> new_box_autoadd_u64_0(
    int value,
  ) {
    return _new_box_autoadd_u64_0(
      value,
    );
  }

  late final _new_box_autoadd_u64_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint64> Function(ffi.Uint64)>>(
          'new_box_autoadd_u64_0');
  late final _new_box_autoadd_u64_0 = _new_box_autoadd_u64_0Ptr
      .asFunction<ffi.Pointer<ffi.Uint64> Function(int)>();

  ffi.Pointer<wire_UnsignedMessageImpl>
      new_box_autoadd_unsigned_message_impl_0() {
    return _new_box_autoadd_unsigned_message_impl_0();
  }

  late final _new_box_autoadd_unsigned_message_impl_0Ptr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_UnsignedMessageImpl> Function()>>(
      'new_box_autoadd_unsigned_message_impl_0');
  late final _new_box_autoadd_unsigned_message_impl_0 =
      _new_box_autoadd_unsigned_message_impl_0Ptr
          .asFunction<ffi.Pointer<wire_UnsignedMessageImpl> Function()>();

  ffi.Pointer<wire_int_32_list> new_int_32_list_0(
    int len,
  ) {
    return _new_int_32_list_0(
      len,
    );
  }

  late final _new_int_32_list_0Ptr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_int_32_list> Function(ffi.Int32)>>(
      'new_int_32_list_0');
  late final _new_int_32_list_0 = _new_int_32_list_0Ptr
      .asFunction<ffi.Pointer<wire_int_32_list> Function(int)>();

  ffi.Pointer<wire_list_dynamic_named_value> new_list_dynamic_named_value_0(
    int len,
  ) {
    return _new_list_dynamic_named_value_0(
      len,
    );
  }

  late final _new_list_dynamic_named_value_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_list_dynamic_named_value> Function(
              ffi.Int32)>>('new_list_dynamic_named_value_0');
  late final _new_list_dynamic_named_value_0 =
      _new_list_dynamic_named_value_0Ptr.asFunction<
          ffi.Pointer<wire_list_dynamic_named_value> Function(int)>();

  ffi.Pointer<wire_list_dynamic_value> new_list_dynamic_value_0(
    int len,
  ) {
    return _new_list_dynamic_value_0(
      len,
    );
  }

  late final _new_list_dynamic_value_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_list_dynamic_value> Function(
              ffi.Int32)>>('new_list_dynamic_value_0');
  late final _new_list_dynamic_value_0 = _new_list_dynamic_value_0Ptr
      .asFunction<ffi.Pointer<wire_list_dynamic_value> Function(int)>();

  ffi.Pointer<wire_list_key_signer> new_list_key_signer_0(
    int len,
  ) {
    return _new_list_key_signer_0(
      len,
    );
  }

  late final _new_list_key_signer_0Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_list_key_signer> Function(
              ffi.Int32)>>('new_list_key_signer_0');
  late final _new_list_key_signer_0 = _new_list_key_signer_0Ptr
      .asFunction<ffi.Pointer<wire_list_key_signer> Function(int)>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>(
      'new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr
      .asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void drop_opaque_ArcAccountsStorageBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcAccountsStorageBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcAccountsStorageBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcAccountsStorageBoxTrait');
  late final _drop_opaque_ArcAccountsStorageBoxTrait =
      _drop_opaque_ArcAccountsStorageBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcAccountsStorageBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcAccountsStorageBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcAccountsStorageBoxTraitPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
      'share_opaque_ArcAccountsStorageBoxTrait');
  late final _share_opaque_ArcAccountsStorageBoxTrait =
      _share_opaque_ArcAccountsStorageBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcGenericContractBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcGenericContractBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcGenericContractBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcGenericContractBoxTrait');
  late final _drop_opaque_ArcGenericContractBoxTrait =
      _drop_opaque_ArcGenericContractBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcGenericContractBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcGenericContractBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcGenericContractBoxTraitPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
      'share_opaque_ArcGenericContractBoxTrait');
  late final _share_opaque_ArcGenericContractBoxTrait =
      _share_opaque_ArcGenericContractBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcGqlConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcGqlConnectionBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcGqlConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcGqlConnectionBoxTrait');
  late final _drop_opaque_ArcGqlConnectionBoxTrait =
      _drop_opaque_ArcGqlConnectionBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcGqlConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcGqlConnectionBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcGqlConnectionBoxTraitPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>)>>('share_opaque_ArcGqlConnectionBoxTrait');
  late final _share_opaque_ArcGqlConnectionBoxTrait =
      _share_opaque_ArcGqlConnectionBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcJrpcConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcJrpcConnectionBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcJrpcConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcJrpcConnectionBoxTrait');
  late final _drop_opaque_ArcJrpcConnectionBoxTrait =
      _drop_opaque_ArcJrpcConnectionBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcJrpcConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcJrpcConnectionBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcJrpcConnectionBoxTraitPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
      'share_opaque_ArcJrpcConnectionBoxTrait');
  late final _share_opaque_ArcJrpcConnectionBoxTrait =
      _share_opaque_ArcJrpcConnectionBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcKeyStoreApiBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcKeyStoreApiBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcKeyStoreApiBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcKeyStoreApiBoxTrait');
  late final _drop_opaque_ArcKeyStoreApiBoxTrait =
      _drop_opaque_ArcKeyStoreApiBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcKeyStoreApiBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcKeyStoreApiBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcKeyStoreApiBoxTraitPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>)>>('share_opaque_ArcKeyStoreApiBoxTrait');
  late final _share_opaque_ArcKeyStoreApiBoxTrait =
      _share_opaque_ArcKeyStoreApiBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcLedgerConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcLedgerConnectionBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcLedgerConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcLedgerConnectionBoxTrait');
  late final _drop_opaque_ArcLedgerConnectionBoxTrait =
      _drop_opaque_ArcLedgerConnectionBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcLedgerConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcLedgerConnectionBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcLedgerConnectionBoxTraitPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
      'share_opaque_ArcLedgerConnectionBoxTrait');
  late final _share_opaque_ArcLedgerConnectionBoxTrait =
      _share_opaque_ArcLedgerConnectionBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcProtoConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcProtoConnectionBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcProtoConnectionBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcProtoConnectionBoxTrait');
  late final _drop_opaque_ArcProtoConnectionBoxTrait =
      _drop_opaque_ArcProtoConnectionBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcProtoConnectionBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcProtoConnectionBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcProtoConnectionBoxTraitPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
      'share_opaque_ArcProtoConnectionBoxTrait');
  late final _share_opaque_ArcProtoConnectionBoxTrait =
      _share_opaque_ArcProtoConnectionBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcStorageBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcStorageBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcStorageBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcStorageBoxTrait');
  late final _drop_opaque_ArcStorageBoxTrait =
      _drop_opaque_ArcStorageBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcStorageBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcStorageBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcStorageBoxTraitPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>)>>('share_opaque_ArcStorageBoxTrait');
  late final _share_opaque_ArcStorageBoxTrait =
      _share_opaque_ArcStorageBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcTokenWalletBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcTokenWalletBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcTokenWalletBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcTokenWalletBoxTrait');
  late final _drop_opaque_ArcTokenWalletBoxTrait =
      _drop_opaque_ArcTokenWalletBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcTokenWalletBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcTokenWalletBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcTokenWalletBoxTraitPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>)>>('share_opaque_ArcTokenWalletBoxTrait');
  late final _share_opaque_ArcTokenWalletBoxTrait =
      _share_opaque_ArcTokenWalletBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcTonWalletBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcTonWalletBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcTonWalletBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcTonWalletBoxTrait');
  late final _drop_opaque_ArcTonWalletBoxTrait =
      _drop_opaque_ArcTonWalletBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcTonWalletBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcTonWalletBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcTonWalletBoxTraitPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>)>>('share_opaque_ArcTonWalletBoxTrait');
  late final _share_opaque_ArcTonWalletBoxTrait =
      _share_opaque_ArcTonWalletBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcTransportBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcTransportBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcTransportBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcTransportBoxTrait');
  late final _drop_opaque_ArcTransportBoxTrait =
      _drop_opaque_ArcTransportBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcTransportBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcTransportBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcTransportBoxTraitPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Void> Function(
              ffi.Pointer<ffi.Void>)>>('share_opaque_ArcTransportBoxTrait');
  late final _share_opaque_ArcTransportBoxTrait =
      _share_opaque_ArcTransportBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  void drop_opaque_ArcUnsignedMessageBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _drop_opaque_ArcUnsignedMessageBoxTrait(
      ptr,
    );
  }

  late final _drop_opaque_ArcUnsignedMessageBoxTraitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'drop_opaque_ArcUnsignedMessageBoxTrait');
  late final _drop_opaque_ArcUnsignedMessageBoxTrait =
      _drop_opaque_ArcUnsignedMessageBoxTraitPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Void> share_opaque_ArcUnsignedMessageBoxTrait(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _share_opaque_ArcUnsignedMessageBoxTrait(
      ptr,
    );
  }

  late final _share_opaque_ArcUnsignedMessageBoxTraitPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>>(
      'share_opaque_ArcUnsignedMessageBoxTrait');
  late final _share_opaque_ArcUnsignedMessageBoxTrait =
      _share_opaque_ArcUnsignedMessageBoxTraitPtr
          .asFunction<ffi.Pointer<ffi.Void> Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_U16() {
    return _inflate_DynamicValue_U16();
  }

  late final _inflate_DynamicValue_U16Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_U16');
  late final _inflate_DynamicValue_U16 = _inflate_DynamicValue_U16Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_U32() {
    return _inflate_DynamicValue_U32();
  }

  late final _inflate_DynamicValue_U32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_U32');
  late final _inflate_DynamicValue_U32 = _inflate_DynamicValue_U32Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_I32() {
    return _inflate_DynamicValue_I32();
  }

  late final _inflate_DynamicValue_I32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_I32');
  late final _inflate_DynamicValue_I32 = _inflate_DynamicValue_I32Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_U64() {
    return _inflate_DynamicValue_U64();
  }

  late final _inflate_DynamicValue_U64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_U64');
  late final _inflate_DynamicValue_U64 = _inflate_DynamicValue_U64Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_I64() {
    return _inflate_DynamicValue_I64();
  }

  late final _inflate_DynamicValue_I64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_I64');
  late final _inflate_DynamicValue_I64 = _inflate_DynamicValue_I64Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_F32() {
    return _inflate_DynamicValue_F32();
  }

  late final _inflate_DynamicValue_F32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_F32');
  late final _inflate_DynamicValue_F32 = _inflate_DynamicValue_F32Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_F64() {
    return _inflate_DynamicValue_F64();
  }

  late final _inflate_DynamicValue_F64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_F64');
  late final _inflate_DynamicValue_F64 = _inflate_DynamicValue_F64Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_String() {
    return _inflate_DynamicValue_String();
  }

  late final _inflate_DynamicValue_StringPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_String');
  late final _inflate_DynamicValue_String = _inflate_DynamicValue_StringPtr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_VecU8() {
    return _inflate_DynamicValue_VecU8();
  }

  late final _inflate_DynamicValue_VecU8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_VecU8');
  late final _inflate_DynamicValue_VecU8 = _inflate_DynamicValue_VecU8Ptr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_MegaStruct() {
    return _inflate_DynamicValue_MegaStruct();
  }

  late final _inflate_DynamicValue_MegaStructPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_MegaStruct');
  late final _inflate_DynamicValue_MegaStruct =
      _inflate_DynamicValue_MegaStructPtr
          .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<DynamicValueKind> inflate_DynamicValue_Error() {
    return _inflate_DynamicValue_Error();
  }

  late final _inflate_DynamicValue_ErrorPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<DynamicValueKind> Function()>>(
          'inflate_DynamicValue_Error');
  late final _inflate_DynamicValue_Error = _inflate_DynamicValue_ErrorPtr
      .asFunction<ffi.Pointer<DynamicValueKind> Function()>();

  ffi.Pointer<KeySignerKind> inflate_KeySigner_Stub() {
    return _inflate_KeySigner_Stub();
  }

  late final _inflate_KeySigner_StubPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<KeySignerKind> Function()>>(
          'inflate_KeySigner_Stub');
  late final _inflate_KeySigner_Stub = _inflate_KeySigner_StubPtr
      .asFunction<ffi.Pointer<KeySignerKind> Function()>();

  ffi.Pointer<MnemonicTypeKind> inflate_MnemonicType_Labs() {
    return _inflate_MnemonicType_Labs();
  }

  late final _inflate_MnemonicType_LabsPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<MnemonicTypeKind> Function()>>(
          'inflate_MnemonicType_Labs');
  late final _inflate_MnemonicType_Labs = _inflate_MnemonicType_LabsPtr
      .asFunction<ffi.Pointer<MnemonicTypeKind> Function()>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>(
          'free_WireSyncReturn');
  late final _free_WireSyncReturn =
      _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();
}

final class _Dart_Handle extends ffi.Opaque {}

final class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_MnemonicType_Legacy extends ffi.Opaque {}

final class wire_MnemonicType_Labs extends ffi.Struct {
  @ffi.Uint16()
  external int field0;
}

final class MnemonicTypeKind extends ffi.Union {
  external ffi.Pointer<wire_MnemonicType_Legacy> Legacy;

  external ffi.Pointer<wire_MnemonicType_Labs> Labs;
}

final class wire_MnemonicType extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<MnemonicTypeKind> kind;
}

final class wire_DynamicValue_U16 extends ffi.Struct {
  @ffi.Uint16()
  external int field0;
}

final class wire_DynamicValue_U32 extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class wire_DynamicValue_I32 extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_DynamicValue_U64 extends ffi.Struct {
  @ffi.Uint64()
  external int field0;
}

final class wire_DynamicValue_I64 extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_DynamicValue_F32 extends ffi.Struct {
  @ffi.Float()
  external double field0;
}

final class wire_DynamicValue_F64 extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class wire_DynamicValue_String extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> field0;
}

final class wire_DynamicValue_VecU8 extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> field0;
}

final class wire_DynamicValue_MegaStruct extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> field0;
}

final class wire_DynamicValue_Error extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_DynamicValue_None extends ffi.Opaque {}

final class DynamicValueKind extends ffi.Union {
  external ffi.Pointer<wire_DynamicValue_U16> U16;

  external ffi.Pointer<wire_DynamicValue_U32> U32;

  external ffi.Pointer<wire_DynamicValue_I32> I32;

  external ffi.Pointer<wire_DynamicValue_U64> U64;

  external ffi.Pointer<wire_DynamicValue_I64> I64;

  external ffi.Pointer<wire_DynamicValue_F32> F32;

  external ffi.Pointer<wire_DynamicValue_F64> F64;

  external ffi.Pointer<wire_DynamicValue_String> String;

  external ffi.Pointer<wire_DynamicValue_VecU8> VecU8;

  external ffi.Pointer<wire_DynamicValue_MegaStruct> MegaStruct;

  external ffi.Pointer<wire_DynamicValue_Error> Error;

  external ffi.Pointer<wire_DynamicValue_None> None;
}

final class wire_DynamicValue extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<DynamicValueKind> kind;
}

final class wire_list_dynamic_value extends ffi.Struct {
  external ffi.Pointer<wire_DynamicValue> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_DynamicNamedValue extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_DynamicValue> value;
}

final class wire_list_dynamic_named_value extends ffi.Struct {
  external ffi.Pointer<wire_DynamicNamedValue> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_DartCallStub extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> instance_hash;

  external ffi.Pointer<wire_uint_8_list> fn_name;

  external ffi.Pointer<wire_list_dynamic_value> args;

  external ffi.Pointer<wire_list_dynamic_named_value> named_args;
}

final class wire_ArcUnsignedMessageBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_UnsignedMessageImpl extends ffi.Struct {
  external wire_ArcUnsignedMessageBoxTrait inner_message;
}

final class wire_ArcGqlConnectionBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_GqlConnectionDartWrapper extends ffi.Struct {
  external wire_ArcGqlConnectionBoxTrait inner_connection;
}

final class wire_ArcTransportBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_GqlTransportImpl extends ffi.Struct {
  external wire_ArcTransportBoxTrait inner_transport;
}

final class wire_int_32_list extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_ArcProtoConnectionBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_ProtoConnectionDartWrapper extends ffi.Struct {
  external wire_ArcProtoConnectionBoxTrait inner_connection;
}

final class wire_ProtoTransportImpl extends ffi.Struct {
  external wire_ArcTransportBoxTrait inner_transport;
}

final class wire_ArcJrpcConnectionBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_JrpcConnectionDartWrapper extends ffi.Struct {
  external wire_ArcJrpcConnectionBoxTrait inner_connection;
}

final class wire_JrpcTransportImpl extends ffi.Struct {
  external wire_ArcTransportBoxTrait inner_transport;
}

final class wire_ArcTokenWalletBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_TokenWalletDartWrapper extends ffi.Struct {
  external wire_ArcTokenWalletBoxTrait inner_wallet;
}

final class wire_ArcStorageBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_StorageDartWrapper extends ffi.Struct {
  external wire_ArcStorageBoxTrait inner_storage;
}

final class wire_KeySigner_Encrypted extends ffi.Opaque {}

final class wire_KeySigner_Derived extends ffi.Opaque {}

final class wire_KeySigner_Ledger extends ffi.Opaque {}

final class wire_KeySigner_Stub extends ffi.Struct {
  @ffi.Bool()
  external bool field0;
}

final class KeySignerKind extends ffi.Union {
  external ffi.Pointer<wire_KeySigner_Encrypted> Encrypted;

  external ffi.Pointer<wire_KeySigner_Derived> Derived;

  external ffi.Pointer<wire_KeySigner_Ledger> Ledger;

  external ffi.Pointer<wire_KeySigner_Stub> Stub;
}

final class wire_KeySigner extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ffi.Pointer<KeySignerKind> kind;
}

final class wire_list_key_signer extends ffi.Struct {
  external ffi.Pointer<wire_KeySigner> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_ArcLedgerConnectionBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_LedgerConnectionDartWrapper extends ffi.Struct {
  external wire_ArcLedgerConnectionBoxTrait inner_connection;
}

final class wire_ArcKeyStoreApiBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_KeystoreDartWrapper extends ffi.Struct {
  external wire_ArcKeyStoreApiBoxTrait inner_keystore;
}

final class wire_StringList extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_uint_8_list>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_ArcAccountsStorageBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_AccountsStorageImpl extends ffi.Struct {
  external wire_ArcAccountsStorageBoxTrait inner_storage;
}

final class wire_ArcGenericContractBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_GenericContractDartWrapper extends ffi.Struct {
  external wire_ArcGenericContractBoxTrait inner_contract;
}

final class wire_TransactionExecutionOptions extends ffi.Struct {
  @ffi.Bool()
  external bool disable_signature_check;

  external ffi.Pointer<ffi.Uint64> override_balance;
}

final class wire_ArcTonWalletBoxTrait extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class wire_TonWalletDartWrapper extends ffi.Struct {
  external wire_ArcTonWalletBoxTrait inner_wallet;
}

final class wire_MyClass extends ffi.Struct {
  @ffi.Int32()
  external int val;
}

final class wire_CallerTestClass extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> instance_hash;

  @ffi.Int32()
  external int value;
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Bool Function(DartPort port_id, ffi.Pointer<ffi.Void> message)>>;
typedef DartPort = ffi.Int64;
